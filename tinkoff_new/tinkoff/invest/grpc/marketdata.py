"""
DO NOT EDIT!
Generated by ohmyproto
isort:skip_file
"""
import proto
from google.protobuf import timestamp_pb2
from tinkoff.invest.grpc import common

__protobuf__ = proto.module(package=__name__)


class SubscriptionAction(proto.Enum):
    """Тип операции со списком подписок."""

    SUBSCRIPTION_ACTION_UNSPECIFIED = 0
    """Статус подписки не определён."""

    SUBSCRIPTION_ACTION_SUBSCRIBE = 1
    """Подписаться."""

    SUBSCRIPTION_ACTION_UNSUBSCRIBE = 2
    """Отписаться."""


class SubscriptionInterval(proto.Enum):
    """Интервал свечи."""

    SUBSCRIPTION_INTERVAL_UNSPECIFIED = 0
    """Интервал свечи не определён."""

    SUBSCRIPTION_INTERVAL_ONE_MINUTE = 1
    """Минутные свечи."""

    SUBSCRIPTION_INTERVAL_FIVE_MINUTES = 2
    """Пятиминутные свечи."""


class SubscriptionStatus(proto.Enum):
    """Результат подписки."""

    SUBSCRIPTION_STATUS_UNSPECIFIED = 0
    """Статус подписки не определён."""

    SUBSCRIPTION_STATUS_SUCCESS = 1
    """Успешно."""

    SUBSCRIPTION_STATUS_INSTRUMENT_NOT_FOUND = 2
    """Инструмент не найден."""

    SUBSCRIPTION_STATUS_SUBSCRIPTION_ACTION_IS_INVALID = 3
    """Некорректный статус подписки, список возможных значений: [SubscriptionAction](https://tinkoff.github.io/investAPI/marketdata#subscriptionaction)."""

    SUBSCRIPTION_STATUS_DEPTH_IS_INVALID = 4
    """Некорректная глубина стакана, доступные значения: 1, 10, 20, 30, 40, 50."""

    SUBSCRIPTION_STATUS_INTERVAL_IS_INVALID = 5
    """Некорректный интервал свечей, список возможных значений: [SubscriptionInterval](https://tinkoff.github.io/investAPI/marketdata#subscriptioninterval)."""

    SUBSCRIPTION_STATUS_LIMIT_IS_EXCEEDED = 6
    """Превышен лимит на общее количество подписок в рамках стрима, подробнее: [Лимитная политика](https://tinkoff.github.io/investAPI/limits/)."""

    SUBSCRIPTION_STATUS_INTERNAL_ERROR = 7
    """Внутренняя ошибка сервиса."""

    SUBSCRIPTION_STATUS_TOO_MANY_REQUESTS = 8
    """Превышен лимит на количество запросов на подписки в течение установленного отрезка времени"""


class TradeDirection(proto.Enum):
    """Направление сделки."""

    TRADE_DIRECTION_UNSPECIFIED = 0
    """Направление сделки не определено."""

    TRADE_DIRECTION_BUY = 1
    """Покупка."""

    TRADE_DIRECTION_SELL = 2
    """Продажа."""


class CandleInterval(proto.Enum):
    """Интервал свечей."""

    CANDLE_INTERVAL_UNSPECIFIED = 0
    """Интервал не определён."""

    CANDLE_INTERVAL_1_MIN = 1
    """1 минута."""

    CANDLE_INTERVAL_5_MIN = 2
    """5 минут."""

    CANDLE_INTERVAL_15_MIN = 3
    """15 минут."""

    CANDLE_INTERVAL_HOUR = 4
    """1 час."""

    CANDLE_INTERVAL_DAY = 5
    """1 день."""


class Order(proto.Message):
    """Массив предложений/спроса."""

    price = proto.Field(common.Quotation, number=1)
    """Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    quantity = proto.Field(proto.INT64, number=2)
    """Количество в лотах."""


class Trade(proto.Message):
    """Информация о сделке."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    direction = proto.Field(TradeDirection, number=2)
    """Направление сделки."""

    price = proto.Field(common.Quotation, number=3)
    """Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    quantity = proto.Field(proto.INT64, number=4)
    """Количество лотов."""

    time = proto.Field(timestamp_pb2.Timestamp, number=5)
    """Время сделки в часовом поясе UTC по времени биржи."""

    instrument_uid = proto.Field(proto.STRING, number=6)
    """Uid инструмента"""


class LastPrice(proto.Message):
    """Информация о цене."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi инструмента."""

    price = proto.Field(common.Quotation, number=2)
    """Последняя цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    time = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Время получения последней цены в часовом поясе UTC по времени биржи."""

    instrument_uid = proto.Field(proto.STRING, number=11)
    """Uid инструмента"""


class SubscribeCandlesRequest(proto.Message):
    """subscribeCandles | Изменения статуса подписки на свечи."""

    subscription_action = proto.Field(SubscriptionAction, number=1)
    """Изменение статуса подписки."""

    instruments = proto.RepeatedField(CandleInstrument, number=2)
    """Массив инструментов для подписки на свечи."""

    waiting_close = proto.Field(proto.BOOL, number=3)
    """Флаг ожидания закрытия временного интервала для отправки свечи, применяется только для минутных свечей."""


class CandleInstrument(proto.Message):
    """Запрос изменения статус подписки на свечи."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    interval = proto.Field(SubscriptionInterval, number=2)
    """Интервал свечей."""

    instrument_id = proto.Field(proto.STRING, number=3)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class CandleSubscription(proto.Message):
    """Статус подписки на свечи."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    interval = proto.Field(SubscriptionInterval, number=2)
    """Интервал свечей."""

    subscription_status = proto.Field(SubscriptionStatus, number=3)
    """Статус подписки."""

    instrument_uid = proto.Field(proto.STRING, number=4)
    """Uid инструмента"""


class SubscribeOrderBookRequest(proto.Message):
    """Запрос на изменение статуса подписки на стаканы."""

    subscription_action = proto.Field(SubscriptionAction, number=1)
    """Изменение статуса подписки."""

    instruments = proto.RepeatedField(OrderBookInstrument, number=2)
    """Массив инструментов для подписки на стаканы."""


class OrderBookInstrument(proto.Message):
    """Запрос подписки на стаканы."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    depth = proto.Field(proto.INT32, number=2)
    """Глубина стакана."""

    instrument_id = proto.Field(proto.STRING, number=3)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class OrderBookSubscription(proto.Message):
    """Статус подписки."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    depth = proto.Field(proto.INT32, number=2)
    """Глубина стакана."""

    subscription_status = proto.Field(SubscriptionStatus, number=3)
    """Статус подписки."""

    instrument_uid = proto.Field(proto.STRING, number=4)
    """Uid инструмента"""


class SubscribeTradesRequest(proto.Message):
    """Изменение статуса подписки на поток обезличенных сделок."""

    subscription_action = proto.Field(SubscriptionAction, number=1)
    """Изменение статуса подписки."""

    instruments = proto.RepeatedField(TradeInstrument, number=2)
    """Массив инструментов для подписки на поток обезличенных сделок."""


class TradeInstrument(proto.Message):
    """Запрос подписки на поток обезличенных сделок."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    instrument_id = proto.Field(proto.STRING, number=2)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class TradeSubscription(proto.Message):
    """Статус подписки."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    subscription_status = proto.Field(SubscriptionStatus, number=2)
    """Статус подписки."""

    instrument_uid = proto.Field(proto.STRING, number=3)
    """Uid инструмента"""


class SubscribeInfoRequest(proto.Message):
    """Изменение статуса подписки на торговый статус инструмента."""

    subscription_action = proto.Field(SubscriptionAction, number=1)
    """Изменение статуса подписки."""

    instruments = proto.RepeatedField(InfoInstrument, number=2)
    """Массив инструментов для подписки на торговый статус."""


class InfoInstrument(proto.Message):
    """Запрос подписки на торговый статус."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    instrument_id = proto.Field(proto.STRING, number=2)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class InfoSubscription(proto.Message):
    """Статус подписки."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    subscription_status = proto.Field(SubscriptionStatus, number=2)
    """Статус подписки."""

    instrument_uid = proto.Field(proto.STRING, number=3)
    """Uid инструмента"""


class SubscribeLastPriceRequest(proto.Message):
    """Изменение статуса подписки на последнюю цену инструмента."""

    subscription_action = proto.Field(SubscriptionAction, number=1)
    """Изменение статуса подписки."""

    instruments = proto.RepeatedField(LastPriceInstrument, number=2)
    """Массив инструментов для подписки на последнюю цену."""


class LastPriceInstrument(proto.Message):
    """Запрос подписки на последнюю цену."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    instrument_id = proto.Field(proto.STRING, number=2)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class LastPriceSubscription(proto.Message):
    """Статус подписки на последнюю цену."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    subscription_status = proto.Field(SubscriptionStatus, number=2)
    """Статус подписки."""

    instrument_uid = proto.Field(proto.STRING, number=3)
    """Uid инструмента"""


class Candle(proto.Message):
    """Пакет свечей в рамках стрима."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    interval = proto.Field(SubscriptionInterval, number=2)
    """Интервал свечи."""

    open = proto.Field(common.Quotation, number=3)
    """Цена открытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    high = proto.Field(common.Quotation, number=4)
    """Максимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    low = proto.Field(common.Quotation, number=5)
    """Минимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    close = proto.Field(common.Quotation, number=6)
    """Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    volume = proto.Field(proto.INT64, number=7)
    """Объём сделок в лотах."""

    time = proto.Field(timestamp_pb2.Timestamp, number=8)
    """Время начала интервала свечи в часовом поясе UTC."""

    last_trade_ts = proto.Field(timestamp_pb2.Timestamp, number=9)
    """Время последней сделки, вошедшей в свечу в часовом поясе UTC."""

    instrument_uid = proto.Field(proto.STRING, number=10)
    """Uid инструмента"""


class TradingStatus(proto.Message):
    """Пакет изменения торгового статуса."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    trading_status = proto.Field(common.SecurityTradingStatus, number=2)
    """Статус торговли инструментом."""

    time = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Время изменения торгового статуса в часовом поясе UTC."""

    limit_order_available_flag = proto.Field(proto.BOOL, number=4)
    """Признак доступности выставления лимитной заявки по инструменту."""

    market_order_available_flag = proto.Field(proto.BOOL, number=5)
    """Признак доступности выставления рыночной заявки по инструменту."""

    instrument_uid = proto.Field(proto.STRING, number=6)
    """Uid инструмента"""


class HistoricCandle(proto.Message):
    """Информация о свече."""

    open = proto.Field(common.Quotation, number=1)
    """Цена открытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    high = proto.Field(common.Quotation, number=2)
    """Максимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    low = proto.Field(common.Quotation, number=3)
    """Минимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    close = proto.Field(common.Quotation, number=4)
    """Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    volume = proto.Field(proto.INT64, number=5)
    """Объём торгов в лотах."""

    time = proto.Field(timestamp_pb2.Timestamp, number=6)
    """Время свечи в часовом поясе UTC."""

    is_complete = proto.Field(proto.BOOL, number=7)
    """Признак завершённости свечи. **false** значит, свеча за текущие интервал ещё сформирована не полностью."""


class GetMySubscriptions(proto.Message):
    """Запрос активных подписок."""


class InstrumentClosePriceRequest(proto.Message):
    """Запрос цен закрытия торговой сессии по инструменту."""

    instrument_id = proto.Field(proto.STRING, number=1)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class InstrumentClosePriceResponse(proto.Message):
    """Цена закрытия торговой сессии по инструменту."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi инструмента."""

    instrument_uid = proto.Field(proto.STRING, number=2)
    """Uid инструмента."""

    price = proto.Field(common.Quotation, number=11)
    """Цена закрытия торговой сессии."""

    time = proto.Field(timestamp_pb2.Timestamp, number=21)
    """Дата совершения торгов."""


class SubscribeCandlesResponse(proto.Message):
    """Результат изменения статус подписки на свечи."""

    tracking_id = proto.Field(proto.STRING, number=1)
    """Уникальный идентификатор запроса, подробнее: [tracking_id](https://tinkoff.github.io/investAPI/grpc#tracking-id)."""

    candles_subscriptions = proto.RepeatedField(CandleSubscription, number=2)
    """Массив статусов подписки на свечи."""


class SubscribeOrderBookResponse(proto.Message):
    """Результат изменения статуса подписки на стаканы."""

    tracking_id = proto.Field(proto.STRING, number=1)
    """Уникальный идентификатор запроса, подробнее: [tracking_id](https://tinkoff.github.io/investAPI/grpc#tracking-id)."""

    order_book_subscriptions = proto.RepeatedField(OrderBookSubscription, number=2)
    """Массив статусов подписки на стаканы."""


class SubscribeTradesResponse(proto.Message):
    """Результат изменения статуса подписки на поток обезличенных сделок."""

    tracking_id = proto.Field(proto.STRING, number=1)
    """Уникальный идентификатор запроса, подробнее: [tracking_id](https://tinkoff.github.io/investAPI/grpc#tracking-id)."""

    trade_subscriptions = proto.RepeatedField(TradeSubscription, number=2)
    """Массив статусов подписки на поток сделок."""


class SubscribeInfoResponse(proto.Message):
    """Результат изменения статуса подписки на торговый статус."""

    tracking_id = proto.Field(proto.STRING, number=1)
    """Уникальный идентификатор запроса, подробнее: [tracking_id](https://tinkoff.github.io/investAPI/grpc#tracking-id)."""

    info_subscriptions = proto.RepeatedField(InfoSubscription, number=2)
    """Массив статусов подписки на торговый статус."""


class SubscribeLastPriceResponse(proto.Message):
    """Результат изменения статуса подписки на последнюю цену."""

    tracking_id = proto.Field(proto.STRING, number=1)
    """Уникальный идентификатор запроса, подробнее: [tracking_id](https://tinkoff.github.io/investAPI/grpc#tracking-id)."""

    last_price_subscriptions = proto.RepeatedField(LastPriceSubscription, number=2)
    """Массив статусов подписки на последнюю цену."""


class GetCandlesRequest(proto.Message):
    """Запрос исторических свечей."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    from_ = proto.Field(timestamp_pb2.Timestamp, number=2)
    """Начало запрашиваемого периода в часовом поясе UTC."""

    to = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Окончание запрашиваемого периода в часовом поясе UTC."""

    interval = proto.Field(CandleInterval, number=4)
    """Интервал запрошенных свечей."""

    instrument_id = proto.Field(proto.STRING, number=5)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class GetLastPricesRequest(proto.Message):
    """Запрос получения последних цен."""

    figi = proto.RepeatedField(proto.STRING, number=1)
    """Массив figi-идентификаторов инструментов."""

    instrument_id = proto.RepeatedField(proto.STRING, number=2)
    """Массив идентификаторов инструмента, принимает значения figi или instrument_uid"""


class GetOrderBookRequest(proto.Message):
    """Запрос стакана."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    depth = proto.Field(proto.INT32, number=2)
    """Глубина стакана."""

    instrument_id = proto.Field(proto.STRING, number=3)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class GetTradingStatusRequest(proto.Message):
    """Запрос получения торгового статуса."""

    figi = proto.Field(proto.STRING, number=1)
    """Идентификатор инструмента."""

    instrument_id = proto.Field(proto.STRING, number=2)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class GetTradingStatusResponse(proto.Message):
    """Информация о торговом статусе."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    trading_status = proto.Field(common.SecurityTradingStatus, number=2)
    """Статус торговли инструментом."""

    limit_order_available_flag = proto.Field(proto.BOOL, number=3)
    """Признак доступности выставления лимитной заявки по инструменту."""

    market_order_available_flag = proto.Field(proto.BOOL, number=4)
    """Признак доступности выставления рыночной заявки по инструменту."""

    api_trade_available_flag = proto.Field(proto.BOOL, number=5)
    """Признак доступности торгов через API."""

    instrument_uid = proto.Field(proto.STRING, number=6)
    """Uid инструмента"""


class GetLastTradesRequest(proto.Message):
    """Запрос обезличенных сделок за последний час."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента"""

    from_ = proto.Field(timestamp_pb2.Timestamp, number=2)
    """Начало запрашиваемого периода в часовом поясе UTC."""

    to = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Окончание запрашиваемого периода в часовом поясе UTC."""

    instrument_id = proto.Field(proto.STRING, number=4)
    """Идентификатор инструмента, принимает значение figi или instrument_uid"""


class OrderBook(proto.Message):
    """Пакет стаканов в рамках стрима."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    depth = proto.Field(proto.INT32, number=2)
    """Глубина стакана."""

    is_consistent = proto.Field(proto.BOOL, number=3)
    """Флаг консистентности стакана. **false** значит не все заявки попали в стакан по причинам сетевых задержек или нарушения порядка доставки."""

    bids = proto.RepeatedField(Order, number=4)
    """Массив предложений."""

    asks = proto.RepeatedField(Order, number=5)
    """Массив спроса."""

    time = proto.Field(timestamp_pb2.Timestamp, number=6)
    """Время формирования стакана в часовом поясе UTC по времени биржи."""

    limit_up = proto.Field(common.Quotation, number=7)
    """Верхний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    limit_down = proto.Field(common.Quotation, number=8)
    """Нижний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    instrument_uid = proto.Field(proto.STRING, number=9)
    """Uid инструмента"""


class GetCandlesResponse(proto.Message):
    """Список свечей."""

    candles = proto.RepeatedField(HistoricCandle, number=1)
    """Массив свечей."""


class GetLastPricesResponse(proto.Message):
    """Список последних цен."""

    last_prices = proto.RepeatedField(LastPrice, number=1)
    """Массив последних цен."""


class GetLastTradesResponse(proto.Message):
    """Обезличенных сделок за последний час."""

    trades = proto.RepeatedField(Trade, number=1)
    """Массив сделок"""


class GetClosePricesRequest(proto.Message):
    """Запрос цен закрытия торговой сессии по инструментам."""

    instruments = proto.RepeatedField(InstrumentClosePriceRequest, number=1)
    """Массив по инструментам."""


class GetClosePricesResponse(proto.Message):
    """Цены закрытия торговой сессии по инструментам."""

    close_prices = proto.RepeatedField(InstrumentClosePriceResponse, number=1)
    """Массив по инструментам."""


class GetOrderBookResponse(proto.Message):
    """Информация о стакане."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    depth = proto.Field(proto.INT32, number=2)
    """Глубина стакана."""

    bids = proto.RepeatedField(Order, number=3)
    """Множество пар значений на покупку."""

    asks = proto.RepeatedField(Order, number=4)
    """Множество пар значений на продажу."""

    last_price = proto.Field(common.Quotation, number=5)
    """Цена последней сделки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    close_price = proto.Field(common.Quotation, number=6)
    """Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    limit_up = proto.Field(common.Quotation, number=7)
    """Верхний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    limit_down = proto.Field(common.Quotation, number=8)
    """Нижний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/)"""

    last_price_ts = proto.Field(timestamp_pb2.Timestamp, number=21)
    """Время получения цены последней сделки."""

    close_price_ts = proto.Field(timestamp_pb2.Timestamp, number=22)
    """Время получения цены закрытия."""

    orderbook_ts = proto.Field(timestamp_pb2.Timestamp, number=23)
    """Время формирования стакана на бирже."""

    instrument_uid = proto.Field(proto.STRING, number=9)
    """Uid инструмента"""


class MarketDataServerSideStreamRequest(proto.Message):

    subscribe_candles_request = proto.Field(SubscribeCandlesRequest, number=1)
    """Запрос подписки на свечи."""

    subscribe_order_book_request = proto.Field(SubscribeOrderBookRequest, number=2)
    """Запрос подписки на стаканы."""

    subscribe_trades_request = proto.Field(SubscribeTradesRequest, number=3)
    """Запрос подписки на ленту обезличенных сделок."""

    subscribe_info_request = proto.Field(SubscribeInfoRequest, number=4)
    """Запрос подписки на торговые статусы инструментов."""

    subscribe_last_price_request = proto.Field(SubscribeLastPriceRequest, number=5)
    """Запрос подписки на последние цены."""


class MarketDataRequest(proto.Message):
    """Запрос подписки или отписки на определённые биржевые данные."""

    subscribe_candles_request = proto.Field(SubscribeCandlesRequest, number=1, oneof="payload", optional=True)
    """Запрос подписки на свечи."""

    subscribe_order_book_request = proto.Field(SubscribeOrderBookRequest, number=2, oneof="payload", optional=True)
    """Запрос подписки на стаканы."""

    subscribe_trades_request = proto.Field(SubscribeTradesRequest, number=3, oneof="payload", optional=True)
    """Запрос подписки на ленту обезличенных сделок."""

    subscribe_info_request = proto.Field(SubscribeInfoRequest, number=4, oneof="payload", optional=True)
    """Запрос подписки на торговые статусы инструментов."""

    subscribe_last_price_request = proto.Field(SubscribeLastPriceRequest, number=5, oneof="payload", optional=True)
    """Запрос подписки на последние цены."""

    get_my_subscriptions = proto.Field(GetMySubscriptions, number=6, oneof="payload", optional=True)
    """Запрос своих подписок."""


class MarketDataResponse(proto.Message):
    """Пакет биржевой информации по подписке."""

    subscribe_candles_response = proto.Field(SubscribeCandlesResponse, number=1, oneof="payload", optional=True)
    """Результат подписки на свечи."""

    subscribe_order_book_response = proto.Field(SubscribeOrderBookResponse, number=2, oneof="payload", optional=True)
    """Результат подписки на стаканы."""

    subscribe_trades_response = proto.Field(SubscribeTradesResponse, number=3, oneof="payload", optional=True)
    """Результат подписки на поток обезличенных сделок."""

    subscribe_info_response = proto.Field(SubscribeInfoResponse, number=4, oneof="payload", optional=True)
    """Результат подписки на торговые статусы инструментов."""

    candle = proto.Field(Candle, number=5, oneof="payload", optional=True)
    """Свеча."""

    trade = proto.Field(Trade, number=6, oneof="payload", optional=True)
    """Сделки."""

    orderbook = proto.Field(OrderBook, number=7, oneof="payload", optional=True)
    """Стакан."""

    trading_status = proto.Field(TradingStatus, number=8, oneof="payload", optional=True)
    """Торговый статус."""

    ping = proto.Field(common.Ping, number=9, oneof="payload", optional=True)
    """Проверка активности стрима."""

    subscribe_last_price_response = proto.Field(SubscribeLastPriceResponse, number=10, oneof="payload", optional=True)
    """Результат подписки на последние цены инструментов."""

    last_price = proto.Field(LastPrice, number=11, oneof="payload", optional=True)
    """Последняя цена."""

