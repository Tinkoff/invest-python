"""
DO NOT EDIT!
Generated by ohmyproto
isort:skip_file
"""
from tinkoff.invest.grpc import operations


class OperationsService:
    """Сервис предназначен для получения:</br> **1**.  списка операций по счёту;</br> **2**.
    портфеля по счёту;</br> **3**. позиций ценных бумаг на счёте;</br> **4**.
    доступного остатка для вывода средств;</br> **5**. получения различных отчётов.
    """

    def __init__(self, channel):
        self.get_operations = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.OperationsService/GetOperations",
            request_serializer=operations.OperationsRequest.serialize,
            response_deserializer=operations.OperationsResponse.deserialize,
        )
        """Метод получения списка операций по счёту."""

        self.get_portfolio = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.OperationsService/GetPortfolio",
            request_serializer=operations.PortfolioRequest.serialize,
            response_deserializer=operations.PortfolioResponse.deserialize,
        )
        """Метод получения портфеля по счёту."""

        self.get_positions = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.OperationsService/GetPositions",
            request_serializer=operations.PositionsRequest.serialize,
            response_deserializer=operations.PositionsResponse.deserialize,
        )
        """Метод получения списка позиций по счёту."""

        self.get_withdraw_limits = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.OperationsService/GetWithdrawLimits",
            request_serializer=operations.WithdrawLimitsRequest.serialize,
            response_deserializer=operations.WithdrawLimitsResponse.deserialize,
        )
        """Метод получения доступного остатка для вывода средств."""

        self.get_broker_report = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.OperationsService/GetBrokerReport",
            request_serializer=operations.BrokerReportRequest.serialize,
            response_deserializer=operations.BrokerReportResponse.deserialize,
        )
        """Метод получения брокерского отчёта."""

        self.get_dividends_foreign_issuer = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.OperationsService/GetDividendsForeignIssuer",
            request_serializer=operations.GetDividendsForeignIssuerRequest.serialize,
            response_deserializer=operations.GetDividendsForeignIssuerResponse.deserialize,
        )
        """Метод получения отчёта "Справка о доходах за пределами РФ"."""

        self.get_operations_by_cursor = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.OperationsService/GetOperationsByCursor",
            request_serializer=operations.GetOperationsByCursorRequest.serialize,
            response_deserializer=operations.GetOperationsByCursorResponse.deserialize,
        )
        """Метод получения списка операций по счёту с пагинацией."""


class OperationsStreamService:

    def __init__(self, channel):
        self.portfolio_stream = channel.unary_stream(
            "/tinkoff.public.invest.api.contract.v1.OperationsStreamService/PortfolioStream",
            request_serializer=operations.PortfolioStreamRequest.serialize,
            response_deserializer=operations.PortfolioStreamResponse.deserialize,
        )
        """Server-side stream обновлений портфеля"""

        self.positions_stream = channel.unary_stream(
            "/tinkoff.public.invest.api.contract.v1.OperationsStreamService/PositionsStream",
            request_serializer=operations.PositionsStreamRequest.serialize,
            response_deserializer=operations.PositionsStreamResponse.deserialize,
        )
        """Server-side stream обновлений информации по изменению позиций портфеля"""

