"""
DO NOT EDIT!
Generated by ohmyproto
isort:skip_file
"""
from tinkoff.invest.grpc import instruments


class InstrumentsService:
    """Сервис предназначен для получения:</br>**1**. информации об инструментах;</br>**2**.
    расписания торговых сессий;</br>**3**. календаря выплат купонов по облигациям;</br>**4**.
    размера гарантийного обеспечения по фьючерсам;</br>**5**. дивидендов по ценной бумаге.
    """

    def __init__(self, channel):
        self.trading_schedules = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/TradingSchedules",
            request_serializer=instruments.TradingSchedulesRequest.serialize,
            response_deserializer=instruments.TradingSchedulesResponse.deserialize,
        )
        """Метод получения расписания торгов торговых площадок."""

        self.bond_by = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/BondBy",
            request_serializer=instruments.InstrumentRequest.serialize,
            response_deserializer=instruments.BondResponse.deserialize,
        )
        """Метод получения облигации по её идентификатору."""

        self.bonds = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Bonds",
            request_serializer=instruments.InstrumentsRequest.serialize,
            response_deserializer=instruments.BondsResponse.deserialize,
        )
        """Метод получения списка облигаций."""

        self.get_bond_coupons = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBondCoupons",
            request_serializer=instruments.GetBondCouponsRequest.serialize,
            response_deserializer=instruments.GetBondCouponsResponse.deserialize,
        )
        """Метод получения графика выплат купонов по облигации."""

        self.currency_by = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/CurrencyBy",
            request_serializer=instruments.InstrumentRequest.serialize,
            response_deserializer=instruments.CurrencyResponse.deserialize,
        )
        """Метод получения валюты по её идентификатору."""

        self.currencies = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Currencies",
            request_serializer=instruments.InstrumentsRequest.serialize,
            response_deserializer=instruments.CurrenciesResponse.deserialize,
        )
        """Метод получения списка валют."""

        self.etf_by = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/EtfBy",
            request_serializer=instruments.InstrumentRequest.serialize,
            response_deserializer=instruments.EtfResponse.deserialize,
        )
        """Метод получения инвестиционного фонда по его идентификатору."""

        self.etfs = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Etfs",
            request_serializer=instruments.InstrumentsRequest.serialize,
            response_deserializer=instruments.EtfsResponse.deserialize,
        )
        """Метод получения списка инвестиционных фондов."""

        self.future_by = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/FutureBy",
            request_serializer=instruments.InstrumentRequest.serialize,
            response_deserializer=instruments.FutureResponse.deserialize,
        )
        """Метод получения фьючерса по его идентификатору."""

        self.futures = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Futures",
            request_serializer=instruments.InstrumentsRequest.serialize,
            response_deserializer=instruments.FuturesResponse.deserialize,
        )
        """Метод получения списка фьючерсов."""

        self.option_by = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/OptionBy",
            request_serializer=instruments.InstrumentRequest.serialize,
            response_deserializer=instruments.OptionResponse.deserialize,
        )
        """Метод получения опциона по его идентификатору."""

        self.options = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Options",
            request_serializer=instruments.InstrumentsRequest.serialize,
            response_deserializer=instruments.OptionsResponse.deserialize,
        )
        """Метод получения списка опционов."""

        self.share_by = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/ShareBy",
            request_serializer=instruments.InstrumentRequest.serialize,
            response_deserializer=instruments.ShareResponse.deserialize,
        )
        """Метод получения акции по её идентификатору."""

        self.shares = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/Shares",
            request_serializer=instruments.InstrumentsRequest.serialize,
            response_deserializer=instruments.SharesResponse.deserialize,
        )
        """Метод получения списка акций."""

        self.get_accrued_interests = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAccruedInterests",
            request_serializer=instruments.GetAccruedInterestsRequest.serialize,
            response_deserializer=instruments.GetAccruedInterestsResponse.deserialize,
        )
        """Метод получения накопленного купонного дохода по облигации."""

        self.get_futures_margin = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFuturesMargin",
            request_serializer=instruments.GetFuturesMarginRequest.serialize,
            response_deserializer=instruments.GetFuturesMarginResponse.deserialize,
        )
        """Метод получения размера гарантийного обеспечения по фьючерсам."""

        self.get_instrument_by = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetInstrumentBy",
            request_serializer=instruments.InstrumentRequest.serialize,
            response_deserializer=instruments.InstrumentResponse.deserialize,
        )
        """Метод получения основной информации об инструменте."""

        self.get_dividends = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetDividends",
            request_serializer=instruments.GetDividendsRequest.serialize,
            response_deserializer=instruments.GetDividendsResponse.deserialize,
        )
        """Метод для получения событий выплаты дивидендов по инструменту."""

        self.get_asset_by = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssetBy",
            request_serializer=instruments.AssetRequest.serialize,
            response_deserializer=instruments.AssetResponse.deserialize,
        )
        """Метод получения актива по его идентификатору."""

        self.get_assets = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAssets",
            request_serializer=instruments.AssetsRequest.serialize,
            response_deserializer=instruments.AssetsResponse.deserialize,
        )
        """Метод получения списка активов."""

        self.get_favorites = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFavorites",
            request_serializer=instruments.GetFavoritesRequest.serialize,
            response_deserializer=instruments.GetFavoritesResponse.deserialize,
        )
        """Метод получения списка избранных инструментов."""

        self.edit_favorites = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/EditFavorites",
            request_serializer=instruments.EditFavoritesRequest.serialize,
            response_deserializer=instruments.EditFavoritesResponse.deserialize,
        )
        """Метод редактирования списка избранных инструментов."""

        self.get_countries = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetCountries",
            request_serializer=instruments.GetCountriesRequest.serialize,
            response_deserializer=instruments.GetCountriesResponse.deserialize,
        )
        """Метод получения списка стран."""

        self.find_instrument = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/FindInstrument",
            request_serializer=instruments.FindInstrumentRequest.serialize,
            response_deserializer=instruments.FindInstrumentResponse.deserialize,
        )
        """Метод поиска инструмента."""

        self.get_brands = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBrands",
            request_serializer=instruments.GetBrandsRequest.serialize,
            response_deserializer=instruments.GetBrandsResponse.deserialize,
        )
        """Метод получения списка брендов."""

        self.get_brand_by = channel.unary_unary(
            "/tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBrandBy",
            request_serializer=instruments.GetBrandRequest.serialize,
            response_deserializer=instruments.Brand.deserialize,
        )
        """Метод получения бренда по его идентификатору."""

