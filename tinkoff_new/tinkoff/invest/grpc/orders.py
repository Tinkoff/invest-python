"""
DO NOT EDIT!
Generated by ohmyproto
isort:skip_file
"""
import proto
from google.protobuf import timestamp_pb2
from tinkoff.invest.grpc import common

__protobuf__ = proto.module(package=__name__)


class OrderDirection(proto.Enum):
    """Направление операции."""

    ORDER_DIRECTION_UNSPECIFIED = 0
    """Значение не указано"""

    ORDER_DIRECTION_BUY = 1
    """Покупка"""

    ORDER_DIRECTION_SELL = 2
    """Продажа"""


class OrderType(proto.Enum):
    """Тип заявки."""

    ORDER_TYPE_UNSPECIFIED = 0
    """Значение не указано"""

    ORDER_TYPE_LIMIT = 1
    """Лимитная"""

    ORDER_TYPE_MARKET = 2
    """Рыночная"""


class OrderExecutionReportStatus(proto.Enum):
    """Текущий статус заявки (поручения)"""

    EXECUTION_REPORT_STATUS_UNSPECIFIED = 0
    EXECUTION_REPORT_STATUS_FILL = 1
    """Исполнена"""

    EXECUTION_REPORT_STATUS_REJECTED = 2
    """Отклонена"""

    EXECUTION_REPORT_STATUS_CANCELLED = 3
    """Отменена пользователем"""

    EXECUTION_REPORT_STATUS_NEW = 4
    """Новая"""

    EXECUTION_REPORT_STATUS_PARTIALLYFILL = 5
    """Частично исполнена"""


class PriceType(proto.Enum):
    """Тип цены."""

    PRICE_TYPE_UNSPECIFIED = 0
    """Значение не определено."""

    PRICE_TYPE_POINT = 1
    """Цена в пунктах (только для фьючерсов и облигаций)."""

    PRICE_TYPE_CURRENCY = 2
    """Цена в валюте расчётов по инструменту."""


class OrderTrade(proto.Message):
    """Информация о сделке."""

    date_time = proto.Field(timestamp_pb2.Timestamp, number=1)
    """Дата и время совершения сделки в часовом поясе UTC."""

    price = proto.Field(common.Quotation, number=2)
    """Цена одного инструмента, по которой совершена сделка."""

    quantity = proto.Field(proto.INT64, number=3)
    """Количество лотов в сделке."""


class OrderStage(proto.Message):
    """Сделки в рамках торгового поручения."""

    price = proto.Field(common.MoneyValue, number=1)
    """Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.."""

    quantity = proto.Field(proto.INT64, number=2)
    """Количество лотов."""

    trade_id = proto.Field(proto.STRING, number=3)
    """Идентификатор торговой операции."""


class TradesStreamRequest(proto.Message):
    """Запрос установки соединения."""

    accounts = proto.RepeatedField(proto.STRING, number=1)
    """Идентификаторы счетов."""


class OrderTrades(proto.Message):
    """Информация об исполнении торгового поручения."""

    order_id = proto.Field(proto.STRING, number=1)
    """Идентификатор торгового поручения."""

    created_at = proto.Field(timestamp_pb2.Timestamp, number=2)
    """Дата и время создания сообщения в часовом поясе UTC."""

    direction = proto.Field(OrderDirection, number=3)
    """Направление сделки."""

    figi = proto.Field(proto.STRING, number=4)
    """Figi-идентификатор инструмента."""

    trades = proto.RepeatedField(OrderTrade, number=5)
    """Массив сделок."""

    account_id = proto.Field(proto.STRING, number=6)
    """Идентификатор счёта."""

    instrument_uid = proto.Field(proto.STRING, number=7)
    """UID идентификатор инструмента."""


class PostOrderRequest(proto.Message):
    """Запрос выставления торгового поручения."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    quantity = proto.Field(proto.INT64, number=2)
    """Количество лотов."""

    price = proto.Field(common.Quotation, number=3)
    """Цена одного инструмента. Для получения стоимости лота требуется умножить на лотность инструмента. Игнорируется для рыночных поручений."""

    direction = proto.Field(OrderDirection, number=4)
    """Направление операции."""

    account_id = proto.Field(proto.STRING, number=5)
    """Номер счёта."""

    order_type = proto.Field(OrderType, number=6)
    """Тип заявки."""

    order_id = proto.Field(proto.STRING, number=7)
    """Идентификатор запроса выставления поручения для целей идемпотентности. Максимальная длина 36 символов."""

    instrument_id = proto.Field(proto.STRING, number=8)
    """Идентификатор инструмента, принимает значения Figi или Instrument_uid."""


class PostOrderResponse(proto.Message):
    """Информация о выставлении поручения."""

    order_id = proto.Field(proto.STRING, number=1)
    """Идентификатор заявки."""

    execution_report_status = proto.Field(OrderExecutionReportStatus, number=2)
    """Текущий статус заявки."""

    lots_requested = proto.Field(proto.INT64, number=3)
    """Запрошено лотов."""

    lots_executed = proto.Field(proto.INT64, number=4)
    """Исполнено лотов."""

    initial_order_price = proto.Field(common.MoneyValue, number=5)
    """Начальная цена заявки. Произведение количества запрошенных лотов на цену."""

    executed_order_price = proto.Field(common.MoneyValue, number=6)
    """Исполненная цена заявки. Произведение средней цены покупки на количество лотов."""

    total_order_amount = proto.Field(common.MoneyValue, number=7)
    """Итоговая стоимость заявки, включающая все комиссии."""

    initial_commission = proto.Field(common.MoneyValue, number=8)
    """Начальная комиссия. Комиссия рассчитанная при выставлении заявки."""

    executed_commission = proto.Field(common.MoneyValue, number=9)
    """Фактическая комиссия по итогам исполнения заявки."""

    aci_value = proto.Field(common.MoneyValue, number=10)
    """Значение НКД (накопленного купонного дохода) на дату. Подробнее: [НКД при выставлении торговых поручений](https://tinkoff.github.io/investAPI/head-orders#coupon)"""

    figi = proto.Field(proto.STRING, number=11)
    """Figi-идентификатор инструмента."""

    direction = proto.Field(OrderDirection, number=12)
    """Направление сделки."""

    initial_security_price = proto.Field(common.MoneyValue, number=13)
    """Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента."""

    order_type = proto.Field(OrderType, number=14)
    """Тип заявки."""

    message = proto.Field(proto.STRING, number=15)
    """Дополнительные данные об исполнении заявки."""

    initial_order_price_pt = proto.Field(common.Quotation, number=16)
    """Начальная цена заявки в пунктах (для фьючерсов)."""

    instrument_uid = proto.Field(proto.STRING, number=17)
    """UID идентификатор инструмента."""


class CancelOrderRequest(proto.Message):
    """Запрос отмены торгового поручения."""

    account_id = proto.Field(proto.STRING, number=1)
    """Номер счёта."""

    order_id = proto.Field(proto.STRING, number=2)
    """Идентификатор заявки."""


class CancelOrderResponse(proto.Message):
    """Результат отмены торгового поручения."""

    time = proto.Field(timestamp_pb2.Timestamp, number=1)
    """Дата и время отмены заявки в часовом поясе UTC."""


class GetOrderStateRequest(proto.Message):
    """Запрос получения статуса торгового поручения."""

    account_id = proto.Field(proto.STRING, number=1)
    """Номер счёта."""

    order_id = proto.Field(proto.STRING, number=2)
    """Идентификатор заявки."""


class GetOrdersRequest(proto.Message):
    """Запрос получения списка активных торговых поручений."""

    account_id = proto.Field(proto.STRING, number=1)
    """Номер счёта."""


class OrderState(proto.Message):
    """Информация о торговом поручении."""

    order_id = proto.Field(proto.STRING, number=1)
    """Идентификатор заявки."""

    execution_report_status = proto.Field(OrderExecutionReportStatus, number=2)
    """Текущий статус заявки."""

    lots_requested = proto.Field(proto.INT64, number=3)
    """Запрошено лотов."""

    lots_executed = proto.Field(proto.INT64, number=4)
    """Исполнено лотов."""

    initial_order_price = proto.Field(common.MoneyValue, number=5)
    """Начальная цена заявки. Произведение количества запрошенных лотов на цену."""

    executed_order_price = proto.Field(common.MoneyValue, number=6)
    """Исполненная цена заявки. Произведение средней цены покупки на количество лотов."""

    total_order_amount = proto.Field(common.MoneyValue, number=7)
    """Итоговая стоимость заявки, включающая все комиссии."""

    average_position_price = proto.Field(common.MoneyValue, number=8)
    """Средняя цена позиции по сделке."""

    initial_commission = proto.Field(common.MoneyValue, number=9)
    """Начальная комиссия. Комиссия, рассчитанная на момент подачи заявки."""

    executed_commission = proto.Field(common.MoneyValue, number=10)
    """Фактическая комиссия по итогам исполнения заявки."""

    figi = proto.Field(proto.STRING, number=11)
    """Figi-идентификатор инструмента."""

    direction = proto.Field(OrderDirection, number=12)
    """Направление заявки."""

    initial_security_price = proto.Field(common.MoneyValue, number=13)
    """Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента."""

    stages = proto.RepeatedField(OrderStage, number=14)
    """Стадии выполнения заявки."""

    service_commission = proto.Field(common.MoneyValue, number=15)
    """Сервисная комиссия."""

    currency = proto.Field(proto.STRING, number=16)
    """Валюта заявки."""

    order_type = proto.Field(OrderType, number=17)
    """Тип заявки."""

    order_date = proto.Field(timestamp_pb2.Timestamp, number=18)
    """Дата и время выставления заявки в часовом поясе UTC."""

    instrument_uid = proto.Field(proto.STRING, number=19)
    """UID идентификатор инструмента."""


class ReplaceOrderRequest(proto.Message):
    """Запрос изменения выставленной заявки."""

    account_id = proto.Field(proto.STRING, number=1)
    """Номер счета."""

    order_id = proto.Field(proto.STRING, number=6)
    """Идентификатор заявки на бирже."""

    idempotency_key = proto.Field(proto.STRING, number=7)
    """Новый идентификатор запроса выставления поручения для целей идемпотентности. Максимальная длина 36 символов. Перезатирает старый ключ."""

    quantity = proto.Field(proto.INT64, number=11)
    """Количество лотов."""

    price = proto.Field(common.Quotation, number=12)
    """Цена за 1 инструмент."""

    price_type = proto.Field(PriceType, number=13)
    """Тип цены."""


class TradesStreamResponse(proto.Message):
    """Информация о торговых поручениях."""

    order_trades = proto.Field(OrderTrades, number=1, oneof="payload", optional=True)
    """Информация об исполнении торгового поручения."""

    ping = proto.Field(common.Ping, number=2, oneof="payload", optional=True)
    """Проверка активности стрима."""


class GetOrdersResponse(proto.Message):
    """Список активных торговых поручений."""

    orders = proto.RepeatedField(OrderState, number=1)
    """Массив активных заявок."""

