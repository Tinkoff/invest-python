"""
DO NOT EDIT!
Generated by ohmyproto
isort:skip_file
"""
import proto
from google.protobuf import timestamp_pb2
from tinkoff_new.tinkoff.invest.grpc import common

__protobuf__ = proto.module(package=__name__)


class AccountType(proto.Enum):
    """Тип счёта."""

    ACCOUNT_TYPE_UNSPECIFIED = 0
    """Тип аккаунта не определён."""

    ACCOUNT_TYPE_TINKOFF = 1
    """Брокерский счёт Тинькофф."""

    ACCOUNT_TYPE_TINKOFF_IIS = 2
    """ИИС счёт."""

    ACCOUNT_TYPE_INVEST_BOX = 3
    """Инвесткопилка."""


class AccountStatus(proto.Enum):
    """Статус счёта."""

    ACCOUNT_STATUS_UNSPECIFIED = 0
    """Статус счёта не определён."""

    ACCOUNT_STATUS_NEW = 1
    """Новый, в процессе открытия."""

    ACCOUNT_STATUS_OPEN = 2
    """Открытый и активный счёт."""

    ACCOUNT_STATUS_CLOSED = 3
    """Закрытый счёт."""


class AccessLevel(proto.Enum):
    """Уровень доступа к счёту."""

    ACCOUNT_ACCESS_LEVEL_UNSPECIFIED = 0
    """Уровень доступа не определён."""

    ACCOUNT_ACCESS_LEVEL_FULL_ACCESS = 1
    """Полный доступ к счёту."""

    ACCOUNT_ACCESS_LEVEL_READ_ONLY = 2
    """Доступ с уровнем прав "только чтение"."""

    ACCOUNT_ACCESS_LEVEL_NO_ACCESS = 3
    """Доступ отсутствует."""


class Account(proto.Message):
    """Информация о счёте."""

    id = proto.Field(proto.STRING, number=1)
    """Идентификатор счёта."""

    type = proto.Field(AccountType, number=2)
    """Тип счёта."""

    name = proto.Field(proto.STRING, number=3)
    """Название счёта."""

    status = proto.Field(AccountStatus, number=4)
    """Статус счёта."""

    opened_date = proto.Field(timestamp_pb2.Timestamp, number=5)
    """Дата открытия счёта в часовом поясе UTC."""

    closed_date = proto.Field(timestamp_pb2.Timestamp, number=6)
    """Дата закрытия счёта в часовом поясе UTC."""

    access_level = proto.Field(AccessLevel, number=7)
    """Уровень доступа к текущему счёту (определяется токеном)."""


class UnaryLimit(proto.Message):
    """Лимит unary-методов."""

    limit_per_minute = proto.Field(proto.INT32, number=1)
    """Количество unary-запросов в минуту"""

    methods = proto.RepeatedField(proto.STRING, number=2)
    """Названия методов"""


class StreamLimit(proto.Message):
    """Лимит stream-соединений."""

    limit = proto.Field(proto.INT32, number=1)
    """Максимальное количество stream-соединений"""

    streams = proto.RepeatedField(proto.STRING, number=2)
    """Названия stream-методов"""


class GetAccountsRequest(proto.Message):
    """Запрос получения счетов пользователя."""


class GetMarginAttributesRequest(proto.Message):
    """Запрос маржинальных показателей по счёту"""

    account_id = proto.Field(proto.STRING, number=1)
    """Идентификатор счёта пользователя."""


class GetMarginAttributesResponse(proto.Message):
    """Маржинальные показатели по счёту."""

    liquid_portfolio = proto.Field(common.MoneyValue, number=1)
    """Ликвидная стоимость портфеля. Подробнее: [что такое ликвидный портфель?](https://help.tinkoff.ru/margin-trade/short/liquid-portfolio/)."""

    starting_margin = proto.Field(common.MoneyValue, number=2)
    """Начальная маржа — начальное обеспечение для совершения новой сделки. Подробнее: [начальная и минимальная маржа](https://help.tinkoff.ru/margin-trade/short/initial-and-maintenance-margin/)."""

    minimal_margin = proto.Field(common.MoneyValue, number=3)
    """Минимальная маржа — это минимальное обеспечение для поддержания позиции, которую вы уже открыли. Подробнее: [начальная и минимальная маржа](https://help.tinkoff.ru/margin-trade/short/initial-and-maintenance-margin/)."""

    funds_sufficiency_level = proto.Field(common.Quotation, number=4)
    """Уровень достаточности средств. Соотношение стоимости ликвидного портфеля к начальной марже."""

    amount_of_missing_funds = proto.Field(common.MoneyValue, number=5)
    """Объем недостающих средств. Разница между стартовой маржой и ликвидной стоимости портфеля."""

    corrected_margin = proto.Field(common.MoneyValue, number=6)
    """Скорректированная маржа.Начальная маржа, в которой плановые позиции рассчитываются с учётом активных заявок на покупку позиций лонг или продажу позиций шорт."""


class GetUserTariffRequest(proto.Message):
    """Запрос текущих лимитов пользователя."""


class GetInfoRequest(proto.Message):
    """Запрос информации о пользователе."""


class GetInfoResponse(proto.Message):
    """Информация о пользователе."""

    prem_status = proto.Field(proto.BOOL, number=1)
    """Признак премиум клиента."""

    qual_status = proto.Field(proto.BOOL, number=2)
    """Признак квалифицированного инвестора."""

    qualified_for_work_with = proto.RepeatedField(proto.STRING, number=3)
    """Набор требующих тестирования инструментов и возможностей, с которыми может работать пользователь. [Подробнее](https://tinkoff.github.io/investAPI/faq_users/)."""

    tariff = proto.Field(proto.STRING, number=4)
    """Наименование тарифа пользователя."""


class GetAccountsResponse(proto.Message):
    """Список счетов пользователя."""

    accounts = proto.RepeatedField(Account, number=1)
    """Массив счетов клиента."""


class GetUserTariffResponse(proto.Message):
    """Текущие лимиты пользователя."""

    unary_limits = proto.RepeatedField(UnaryLimit, number=1)
    """Массив лимитов пользователя по unary-запросам"""

    stream_limits = proto.RepeatedField(StreamLimit, number=2)
    """Массив лимитов пользователей для stream-соединений"""

