"""
DO NOT EDIT!
Generated by ohmyproto
isort:skip_file
"""
import proto
from google.protobuf import timestamp_pb2
from tinkoff.invest.grpc import common

__protobuf__ = proto.module(package=__name__)


class CouponType(proto.Enum):
    """Тип купонов."""

    COUPON_TYPE_UNSPECIFIED = 0
    """Неопределенное значение"""

    COUPON_TYPE_CONSTANT = 1
    """Постоянный"""

    COUPON_TYPE_FLOATING = 2
    """Плавающий"""

    COUPON_TYPE_DISCOUNT = 3
    """Дисконт"""

    COUPON_TYPE_MORTGAGE = 4
    """Ипотечный"""

    COUPON_TYPE_FIX = 5
    """Фиксированный"""

    COUPON_TYPE_VARIABLE = 6
    """Переменный"""

    COUPON_TYPE_OTHER = 7
    """Прочее"""


class OptionDirection(proto.Enum):
    """Тип опциона по направлению сделки."""

    OPTION_DIRECTION_UNSPECIFIED = 0
    OPTION_DIRECTION_PUT = 1
    OPTION_DIRECTION_CALL = 2

class OptionPaymentType(proto.Enum):
    """Тип расчетов по опциону."""

    OPTION_PAYMENT_TYPE_UNSPECIFIED = 0
    OPTION_PAYMENT_TYPE_PREMIUM = 1
    OPTION_PAYMENT_TYPE_MARGINAL = 2

class OptionStyle(proto.Enum):
    """Тип опциона по стилю."""

    OPTION_STYLE_UNSPECIFIED = 0
    OPTION_STYLE_AMERICAN = 1
    OPTION_STYLE_EUROPEAN = 2

class OptionSettlementType(proto.Enum):
    """Тип опциона по способу исполнения."""

    OPTION_EXECUTION_TYPE_UNSPECIFIED = 0
    OPTION_EXECUTION_TYPE_PHYSICAL_DELIVERY = 1
    OPTION_EXECUTION_TYPE_CASH_SETTLEMENT = 2

class InstrumentIdType(proto.Enum):
    """Тип идентификатора инструмента. Подробнее об идентификации инструментов: [Идентификация инструментов](https://tinkoff.github.io/investAPI/faq_identification/)"""

    INSTRUMENT_ID_UNSPECIFIED = 0
    """Значение не определено."""

    INSTRUMENT_ID_TYPE_FIGI = 1
    """Figi."""

    INSTRUMENT_ID_TYPE_TICKER = 2
    """Ticker."""

    INSTRUMENT_ID_TYPE_UID = 3
    """Уникальный идентификатор."""

    INSTRUMENT_ID_TYPE_POSITION_UID = 4
    """Идентификатор позиции."""


class InstrumentStatus(proto.Enum):
    """Статус запрашиваемых инструментов."""

    INSTRUMENT_STATUS_UNSPECIFIED = 0
    """Значение не определено."""

    INSTRUMENT_STATUS_BASE = 1
    """Базовый список инструментов (по умолчанию). Инструменты доступные для торговли через TINKOFF INVEST API."""

    INSTRUMENT_STATUS_ALL = 2
    """Список всех инструментов."""


class ShareType(proto.Enum):
    """Тип акций."""

    SHARE_TYPE_UNSPECIFIED = 0
    """Значение не определено."""

    SHARE_TYPE_COMMON = 1
    """Обыкновенная"""

    SHARE_TYPE_PREFERRED = 2
    """Привилегированная"""

    SHARE_TYPE_ADR = 3
    """Американские депозитарные расписки"""

    SHARE_TYPE_GDR = 4
    """Глобальные депозитарные расписки"""

    SHARE_TYPE_MLP = 5
    """Товарищество с ограниченной ответственностью"""

    SHARE_TYPE_NY_REG_SHRS = 6
    """Акции из реестра Нью-Йорка"""

    SHARE_TYPE_CLOSED_END_FUND = 7
    """Закрытый инвестиционный фонд"""

    SHARE_TYPE_REIT = 8
    """Траст недвижимости"""


class AssetType(proto.Enum):
    """Тип актива."""

    ASSET_TYPE_UNSPECIFIED = 0
    """Тип не определён."""

    ASSET_TYPE_CURRENCY = 1
    """Валюта."""

    ASSET_TYPE_COMMODITY = 2
    """Товар."""

    ASSET_TYPE_INDEX = 3
    """Индекс."""

    ASSET_TYPE_SECURITY = 4
    """Ценная бумага."""


class StructuredProductType(proto.Enum):
    """Тип структурной ноты."""

    SP_TYPE_UNSPECIFIED = 0
    """Тип не определён."""

    SP_TYPE_DELIVERABLE = 1
    """Поставочный."""

    SP_TYPE_NON_DELIVERABLE = 2
    """Беспоставочный."""


class EditFavoritesActionType(proto.Enum):
    """Тип действия со списком избранных инструментов."""

    EDIT_FAVORITES_ACTION_TYPE_UNSPECIFIED = 0
    """Тип не определён."""

    EDIT_FAVORITES_ACTION_TYPE_ADD = 1
    """Добавить в список."""

    EDIT_FAVORITES_ACTION_TYPE_DEL = 2
    """Удалить из списка."""


class RealExchange(proto.Enum):
    """Реальная площадка исполнения расчётов."""

    REAL_EXCHANGE_UNSPECIFIED = 0
    """Тип не определён."""

    REAL_EXCHANGE_MOEX = 1
    """Московская биржа."""

    REAL_EXCHANGE_RTS = 2
    """Санкт-Петербургская биржа."""

    REAL_EXCHANGE_OTC = 3
    """Внебиржевой инструмент."""


class Option(proto.Message):
    """Опцион."""

    uid = proto.Field(proto.STRING, number=1)
    """Уникальный идентификатор инструмента."""

    position_uid = proto.Field(proto.STRING, number=2)
    """Уникальный идентификатор позиции."""

    ticker = proto.Field(proto.STRING, number=3)
    """Тикер инструмента."""

    class_code = proto.Field(proto.STRING, number=4)
    """Класс-код."""

    basic_asset_position_uid = proto.Field(proto.STRING, number=5)
    """Уникальный идентификатор позиции основного инструмента."""

    trading_status = proto.Field(common.SecurityTradingStatus, number=21)
    """Текущий режим торгов инструмента."""

    real_exchange = proto.Field(RealExchange, number=31)
    """Реальная площадка исполнения расчётов. Допустимые значения: [REAL_EXCHANGE_MOEX, REAL_EXCHANGE_RTS]"""

    direction = proto.Field(OptionDirection, number=41)
    """Направление опциона."""

    payment_type = proto.Field(OptionPaymentType, number=42)
    """Тип расчетов по опциону."""

    style = proto.Field(OptionStyle, number=43)
    """Стиль опциона."""

    settlement_type = proto.Field(OptionSettlementType, number=44)
    """Способ исполнения опциона."""

    name = proto.Field(proto.STRING, number=101)
    """Название инструмента."""

    currency = proto.Field(proto.STRING, number=111)
    """Валюта."""

    settlement_currency = proto.Field(proto.STRING, number=112)
    """Валюта, в которой оценивается контракт."""

    asset_type = proto.Field(proto.STRING, number=131)
    """Тип актива."""

    basic_asset = proto.Field(proto.STRING, number=132)
    """Основной актив."""

    exchange = proto.Field(proto.STRING, number=141)
    """Биржа."""

    country_of_risk = proto.Field(proto.STRING, number=151)
    """Код страны рисков."""

    country_of_risk_name = proto.Field(proto.STRING, number=152)
    """Наименование страны рисков."""

    sector = proto.Field(proto.STRING, number=161)
    """Сектор экономики."""

    lot = proto.Field(proto.INT32, number=201)
    """Количество бумаг в лоте."""

    basic_asset_size = proto.Field(common.Quotation, number=211)
    """Размер основного актива."""

    klong = proto.Field(common.Quotation, number=221)
    """Коэффициент ставки риска длинной позиции по клиенту."""

    kshort = proto.Field(common.Quotation, number=222)
    """Коэффициент ставки риска короткой позиции по клиенту."""

    dlong = proto.Field(common.Quotation, number=223)
    """Ставка риска минимальной маржи лонг."""

    dshort = proto.Field(common.Quotation, number=224)
    """Ставка риска минимальной маржи шорт."""

    dlong_min = proto.Field(common.Quotation, number=225)
    """Ставка риска начальной маржи лонг."""

    dshort_min = proto.Field(common.Quotation, number=226)
    """Ставка риска начальной маржи шорт."""

    min_price_increment = proto.Field(common.Quotation, number=231)
    """Минимальный шаг цены."""

    strike_price = proto.Field(common.MoneyValue, number=241)
    """Цена страйка."""

    expiration_date = proto.Field(timestamp_pb2.Timestamp, number=301)
    """Дата истечения срока в формате UTC."""

    first_trade_date = proto.Field(timestamp_pb2.Timestamp, number=311)
    """Дата начала обращения контракта в формате UTC."""

    last_trade_date = proto.Field(timestamp_pb2.Timestamp, number=312)
    """Дата исполнения в формате UTC."""

    first_1min_candle_date = proto.Field(timestamp_pb2.Timestamp, number=321)
    """Дата первой минутной свечи в формате UTC."""

    first_1day_candle_date = proto.Field(timestamp_pb2.Timestamp, number=322)
    """Дата первой дневной свечи в формате UTC."""

    short_enabled_flag = proto.Field(proto.BOOL, number=401)
    """Признак доступности для операций шорт."""

    for_iis_flag = proto.Field(proto.BOOL, number=402)
    """Возможность покупки/продажи на ИИС."""

    otc_flag = proto.Field(proto.BOOL, number=403)
    """Признак внебиржевой ценной бумаги."""

    buy_available_flag = proto.Field(proto.BOOL, number=404)
    """Признак доступности для покупки."""

    sell_available_flag = proto.Field(proto.BOOL, number=405)
    """Признак доступности для продажи."""

    for_qual_investor_flag = proto.Field(proto.BOOL, number=406)
    """Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов."""


class Bond(proto.Message):
    """Объект передачи информации об облигации."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    ticker = proto.Field(proto.STRING, number=2)
    """Тикер инструмента."""

    class_code = proto.Field(proto.STRING, number=3)
    """Класс-код (секция торгов)."""

    isin = proto.Field(proto.STRING, number=4)
    """Isin-идентификатор инструмента."""

    lot = proto.Field(proto.INT32, number=5)
    """Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)"""

    currency = proto.Field(proto.STRING, number=6)
    """Валюта расчётов."""

    klong = proto.Field(common.Quotation, number=7)
    """Коэффициент ставки риска длинной позиции по инструменту."""

    kshort = proto.Field(common.Quotation, number=8)
    """Коэффициент ставки риска короткой позиции по инструменту."""

    dlong = proto.Field(common.Quotation, number=9)
    """Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort = proto.Field(common.Quotation, number=10)
    """Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    dlong_min = proto.Field(common.Quotation, number=11)
    """Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort_min = proto.Field(common.Quotation, number=12)
    """Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    short_enabled_flag = proto.Field(proto.BOOL, number=13)
    """Признак доступности для операций в шорт."""

    name = proto.Field(proto.STRING, number=15)
    """Название инструмента."""

    exchange = proto.Field(proto.STRING, number=16)
    """Торговая площадка."""

    coupon_quantity_per_year = proto.Field(proto.INT32, number=17)
    """Количество выплат по купонам в год."""

    maturity_date = proto.Field(timestamp_pb2.Timestamp, number=18)
    """Дата погашения облигации в часовом поясе UTC."""

    nominal = proto.Field(common.MoneyValue, number=19)
    """Номинал облигации."""

    initial_nominal = proto.Field(common.MoneyValue, number=20)
    """Первоначальный номинал облигации."""

    state_reg_date = proto.Field(timestamp_pb2.Timestamp, number=21)
    """Дата выпуска облигации в часовом поясе UTC."""

    placement_date = proto.Field(timestamp_pb2.Timestamp, number=22)
    """Дата размещения в часовом поясе UTC."""

    placement_price = proto.Field(common.MoneyValue, number=23)
    """Цена размещения."""

    aci_value = proto.Field(common.MoneyValue, number=24)
    """Значение НКД (накопленного купонного дохода) на дату."""

    country_of_risk = proto.Field(proto.STRING, number=25)
    """Код страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    country_of_risk_name = proto.Field(proto.STRING, number=26)
    """Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    sector = proto.Field(proto.STRING, number=27)
    """Сектор экономики."""

    issue_kind = proto.Field(proto.STRING, number=28)
    """Форма выпуска. Возможные значения: </br>**documentary** — документарная; </br>**non_documentary** — бездокументарная."""

    issue_size = proto.Field(proto.INT64, number=29)
    """Размер выпуска."""

    issue_size_plan = proto.Field(proto.INT64, number=30)
    """Плановый размер выпуска."""

    trading_status = proto.Field(common.SecurityTradingStatus, number=31)
    """Текущий режим торгов инструмента."""

    otc_flag = proto.Field(proto.BOOL, number=32)
    """Признак внебиржевой ценной бумаги."""

    buy_available_flag = proto.Field(proto.BOOL, number=33)
    """Признак доступности для покупки."""

    sell_available_flag = proto.Field(proto.BOOL, number=34)
    """Признак доступности для продажи."""

    floating_coupon_flag = proto.Field(proto.BOOL, number=35)
    """Признак облигации с плавающим купоном."""

    perpetual_flag = proto.Field(proto.BOOL, number=36)
    """Признак бессрочной облигации."""

    amortization_flag = proto.Field(proto.BOOL, number=37)
    """Признак облигации с амортизацией долга."""

    min_price_increment = proto.Field(common.Quotation, number=38)
    """Шаг цены."""

    api_trade_available_flag = proto.Field(proto.BOOL, number=39)
    """Параметр указывает на возможность торговать инструментом через API."""

    uid = proto.Field(proto.STRING, number=40)
    """Уникальный идентификатор инструмента."""

    real_exchange = proto.Field(RealExchange, number=41)
    """Реальная площадка исполнения расчётов."""

    position_uid = proto.Field(proto.STRING, number=42)
    """Уникальный идентификатор позиции инструмента."""

    for_iis_flag = proto.Field(proto.BOOL, number=51)
    """Признак доступности для ИИС."""

    for_qual_investor_flag = proto.Field(proto.BOOL, number=52)
    """Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов."""

    first_1min_candle_date = proto.Field(timestamp_pb2.Timestamp, number=61)
    """Дата первой минутной свечи."""

    first_1day_candle_date = proto.Field(timestamp_pb2.Timestamp, number=62)
    """Дата первой дневной свечи."""


class Currency(proto.Message):
    """Объект передачи информации о валюте."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    ticker = proto.Field(proto.STRING, number=2)
    """Тикер инструмента."""

    class_code = proto.Field(proto.STRING, number=3)
    """Класс-код (секция торгов)."""

    isin = proto.Field(proto.STRING, number=4)
    """Isin-идентификатор инструмента."""

    lot = proto.Field(proto.INT32, number=5)
    """Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)"""

    currency = proto.Field(proto.STRING, number=6)
    """Валюта расчётов."""

    klong = proto.Field(common.Quotation, number=7)
    """Коэффициент ставки риска длинной позиции по инструменту."""

    kshort = proto.Field(common.Quotation, number=8)
    """Коэффициент ставки риска короткой позиции по инструменту."""

    dlong = proto.Field(common.Quotation, number=9)
    """Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort = proto.Field(common.Quotation, number=10)
    """Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    dlong_min = proto.Field(common.Quotation, number=11)
    """Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort_min = proto.Field(common.Quotation, number=12)
    """Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    short_enabled_flag = proto.Field(proto.BOOL, number=13)
    """Признак доступности для операций в шорт."""

    name = proto.Field(proto.STRING, number=15)
    """Название инструмента."""

    exchange = proto.Field(proto.STRING, number=16)
    """Торговая площадка."""

    nominal = proto.Field(common.MoneyValue, number=17)
    """Номинал."""

    country_of_risk = proto.Field(proto.STRING, number=18)
    """Код страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    country_of_risk_name = proto.Field(proto.STRING, number=19)
    """Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    trading_status = proto.Field(common.SecurityTradingStatus, number=20)
    """Текущий режим торгов инструмента."""

    otc_flag = proto.Field(proto.BOOL, number=21)
    """Признак внебиржевой ценной бумаги."""

    buy_available_flag = proto.Field(proto.BOOL, number=22)
    """Признак доступности для покупки."""

    sell_available_flag = proto.Field(proto.BOOL, number=23)
    """Признак доступности для продажи."""

    iso_currency_name = proto.Field(proto.STRING, number=24)
    """Строковый ISO-код валюты."""

    min_price_increment = proto.Field(common.Quotation, number=25)
    """Шаг цены."""

    api_trade_available_flag = proto.Field(proto.BOOL, number=26)
    """Параметр указывает на возможность торговать инструментом через API."""

    uid = proto.Field(proto.STRING, number=27)
    """Уникальный идентификатор инструмента."""

    real_exchange = proto.Field(RealExchange, number=28)
    """Реальная площадка исполнения расчётов."""

    position_uid = proto.Field(proto.STRING, number=29)
    """Уникальный идентификатор позиции инструмента."""

    for_iis_flag = proto.Field(proto.BOOL, number=41)
    """Признак доступности для ИИС."""

    for_qual_investor_flag = proto.Field(proto.BOOL, number=52)
    """Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов."""

    first_1min_candle_date = proto.Field(timestamp_pb2.Timestamp, number=56)
    """Дата первой минутной свечи."""

    first_1day_candle_date = proto.Field(timestamp_pb2.Timestamp, number=57)
    """Дата первой дневной свечи."""


class Etf(proto.Message):
    """Объект передачи информации об инвестиционном фонде."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    ticker = proto.Field(proto.STRING, number=2)
    """Тикер инструмента."""

    class_code = proto.Field(proto.STRING, number=3)
    """Класс-код (секция торгов)."""

    isin = proto.Field(proto.STRING, number=4)
    """Isin-идентификатор инструмента."""

    lot = proto.Field(proto.INT32, number=5)
    """Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)"""

    currency = proto.Field(proto.STRING, number=6)
    """Валюта расчётов."""

    klong = proto.Field(common.Quotation, number=7)
    """Коэффициент ставки риска длинной позиции по инструменту."""

    kshort = proto.Field(common.Quotation, number=8)
    """Коэффициент ставки риска короткой позиции по инструменту."""

    dlong = proto.Field(common.Quotation, number=9)
    """Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort = proto.Field(common.Quotation, number=10)
    """Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    dlong_min = proto.Field(common.Quotation, number=11)
    """Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort_min = proto.Field(common.Quotation, number=12)
    """Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    short_enabled_flag = proto.Field(proto.BOOL, number=13)
    """Признак доступности для операций в шорт."""

    name = proto.Field(proto.STRING, number=15)
    """Название инструмента."""

    exchange = proto.Field(proto.STRING, number=16)
    """Торговая площадка."""

    fixed_commission = proto.Field(common.Quotation, number=17)
    """Размер фиксированной комиссии фонда."""

    focus_type = proto.Field(proto.STRING, number=18)
    """Возможные значения: </br>**equity** — акции;</br>**fixed_income** — облигации;</br>**mixed_allocation** — смешанный;</br>**money_market** — денежный рынок;</br>**real_estate** — недвижимость;</br>**commodity** — товары;</br>**specialty** — специальный;</br>**private_equity** — private equity;</br>**alternative_investment** — альтернативные инвестиции."""

    released_date = proto.Field(timestamp_pb2.Timestamp, number=19)
    """Дата выпуска в часовом поясе UTC."""

    num_shares = proto.Field(common.Quotation, number=20)
    """Количество акций фонда в обращении."""

    country_of_risk = proto.Field(proto.STRING, number=21)
    """Код страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    country_of_risk_name = proto.Field(proto.STRING, number=22)
    """Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    sector = proto.Field(proto.STRING, number=23)
    """Сектор экономики."""

    rebalancing_freq = proto.Field(proto.STRING, number=24)
    """Частота ребалансировки."""

    trading_status = proto.Field(common.SecurityTradingStatus, number=25)
    """Текущий режим торгов инструмента."""

    otc_flag = proto.Field(proto.BOOL, number=26)
    """Признак внебиржевой ценной бумаги."""

    buy_available_flag = proto.Field(proto.BOOL, number=27)
    """Признак доступности для покупки."""

    sell_available_flag = proto.Field(proto.BOOL, number=28)
    """Признак доступности для продажи."""

    min_price_increment = proto.Field(common.Quotation, number=29)
    """Шаг цены."""

    api_trade_available_flag = proto.Field(proto.BOOL, number=30)
    """Параметр указывает на возможность торговать инструментом через API."""

    uid = proto.Field(proto.STRING, number=31)
    """Уникальный идентификатор инструмента."""

    real_exchange = proto.Field(RealExchange, number=32)
    """Реальная площадка исполнения расчётов."""

    position_uid = proto.Field(proto.STRING, number=33)
    """Уникальный идентификатор позиции инструмента."""

    for_iis_flag = proto.Field(proto.BOOL, number=41)
    """Признак доступности для ИИС."""

    for_qual_investor_flag = proto.Field(proto.BOOL, number=42)
    """Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов."""

    first_1min_candle_date = proto.Field(timestamp_pb2.Timestamp, number=56)
    """Дата первой минутной свечи."""

    first_1day_candle_date = proto.Field(timestamp_pb2.Timestamp, number=57)
    """Дата первой дневной свечи."""


class Future(proto.Message):
    """Объект передачи информации о фьючерсе."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    ticker = proto.Field(proto.STRING, number=2)
    """Тикер инструмента."""

    class_code = proto.Field(proto.STRING, number=3)
    """Класс-код (секция торгов)."""

    lot = proto.Field(proto.INT32, number=4)
    """Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)"""

    currency = proto.Field(proto.STRING, number=5)
    """Валюта расчётов."""

    klong = proto.Field(common.Quotation, number=6)
    """Коэффициент ставки риска длинной позиции по клиенту."""

    kshort = proto.Field(common.Quotation, number=7)
    """Коэффициент ставки риска короткой позиции по клиенту."""

    dlong = proto.Field(common.Quotation, number=8)
    """Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort = proto.Field(common.Quotation, number=9)
    """Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    dlong_min = proto.Field(common.Quotation, number=10)
    """Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort_min = proto.Field(common.Quotation, number=11)
    """Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    short_enabled_flag = proto.Field(proto.BOOL, number=12)
    """Признак доступности для операций шорт."""

    name = proto.Field(proto.STRING, number=13)
    """Название инструмента."""

    exchange = proto.Field(proto.STRING, number=14)
    """Торговая площадка."""

    first_trade_date = proto.Field(timestamp_pb2.Timestamp, number=15)
    """Дата начала обращения контракта в часовом поясе UTC."""

    last_trade_date = proto.Field(timestamp_pb2.Timestamp, number=16)
    """Дата в часовом поясе UTC, до которой возможно проведение операций с фьючерсом."""

    futures_type = proto.Field(proto.STRING, number=17)
    """Тип фьючерса. Возможные значения: </br>**physical_delivery** — физические поставки; </br>**cash_settlement** — денежный эквивалент."""

    asset_type = proto.Field(proto.STRING, number=18)
    """Тип актива. Возможные значения: </br>**commodity** — товар; </br>**currency** — валюта; </br>**security** — ценная бумага; </br>**index** — индекс."""

    basic_asset = proto.Field(proto.STRING, number=19)
    """Основной актив."""

    basic_asset_size = proto.Field(common.Quotation, number=20)
    """Размер основного актива."""

    country_of_risk = proto.Field(proto.STRING, number=21)
    """Код страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    country_of_risk_name = proto.Field(proto.STRING, number=22)
    """Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    sector = proto.Field(proto.STRING, number=23)
    """Сектор экономики."""

    expiration_date = proto.Field(timestamp_pb2.Timestamp, number=24)
    """Дата истечения срока в часов поясе UTC."""

    trading_status = proto.Field(common.SecurityTradingStatus, number=25)
    """Текущий режим торгов инструмента."""

    otc_flag = proto.Field(proto.BOOL, number=26)
    """Признак внебиржевой ценной бумаги."""

    buy_available_flag = proto.Field(proto.BOOL, number=27)
    """Признак доступности для покупки."""

    sell_available_flag = proto.Field(proto.BOOL, number=28)
    """Признак доступности для продажи."""

    min_price_increment = proto.Field(common.Quotation, number=29)
    """Шаг цены."""

    api_trade_available_flag = proto.Field(proto.BOOL, number=30)
    """Параметр указывает на возможность торговать инструментом через API."""

    uid = proto.Field(proto.STRING, number=31)
    """Уникальный идентификатор инструмента."""

    real_exchange = proto.Field(RealExchange, number=32)
    """Реальная площадка исполнения расчётов."""

    position_uid = proto.Field(proto.STRING, number=33)
    """Уникальный идентификатор позиции инструмента."""

    basic_asset_position_uid = proto.Field(proto.STRING, number=34)
    """Уникальный идентификатор позиции основного инструмента."""

    for_iis_flag = proto.Field(proto.BOOL, number=41)
    """Признак доступности для ИИС."""

    for_qual_investor_flag = proto.Field(proto.BOOL, number=42)
    """Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов."""

    first_1min_candle_date = proto.Field(timestamp_pb2.Timestamp, number=56)
    """Дата первой минутной свечи."""

    first_1day_candle_date = proto.Field(timestamp_pb2.Timestamp, number=57)
    """Дата первой дневной свечи."""


class Share(proto.Message):
    """Объект передачи информации об акции."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    ticker = proto.Field(proto.STRING, number=2)
    """Тикер инструмента."""

    class_code = proto.Field(proto.STRING, number=3)
    """Класс-код (секция торгов)."""

    isin = proto.Field(proto.STRING, number=4)
    """Isin-идентификатор инструмента."""

    lot = proto.Field(proto.INT32, number=5)
    """Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)"""

    currency = proto.Field(proto.STRING, number=6)
    """Валюта расчётов."""

    klong = proto.Field(common.Quotation, number=7)
    """Коэффициент ставки риска длинной позиции по инструменту."""

    kshort = proto.Field(common.Quotation, number=8)
    """Коэффициент ставки риска короткой позиции по инструменту."""

    dlong = proto.Field(common.Quotation, number=9)
    """Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort = proto.Field(common.Quotation, number=10)
    """Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    dlong_min = proto.Field(common.Quotation, number=11)
    """Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort_min = proto.Field(common.Quotation, number=12)
    """Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    short_enabled_flag = proto.Field(proto.BOOL, number=13)
    """Признак доступности для операций в шорт."""

    name = proto.Field(proto.STRING, number=15)
    """Название инструмента."""

    exchange = proto.Field(proto.STRING, number=16)
    """Торговая площадка."""

    ipo_date = proto.Field(timestamp_pb2.Timestamp, number=17)
    """Дата IPO акции в часовом поясе UTC."""

    issue_size = proto.Field(proto.INT64, number=18)
    """Размер выпуска."""

    country_of_risk = proto.Field(proto.STRING, number=19)
    """Код страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    country_of_risk_name = proto.Field(proto.STRING, number=20)
    """Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    sector = proto.Field(proto.STRING, number=21)
    """Сектор экономики."""

    issue_size_plan = proto.Field(proto.INT64, number=22)
    """Плановый размер выпуска."""

    nominal = proto.Field(common.MoneyValue, number=23)
    """Номинал."""

    trading_status = proto.Field(common.SecurityTradingStatus, number=25)
    """Текущий режим торгов инструмента."""

    otc_flag = proto.Field(proto.BOOL, number=26)
    """Признак внебиржевой ценной бумаги."""

    buy_available_flag = proto.Field(proto.BOOL, number=27)
    """Признак доступности для покупки."""

    sell_available_flag = proto.Field(proto.BOOL, number=28)
    """Признак доступности для продажи."""

    div_yield_flag = proto.Field(proto.BOOL, number=29)
    """Признак наличия дивидендной доходности."""

    share_type = proto.Field(ShareType, number=30)
    """Тип акции. Возможные значения: [ShareType](https://tinkoff.github.io/investAPI/instruments#sharetype)"""

    min_price_increment = proto.Field(common.Quotation, number=31)
    """Шаг цены."""

    api_trade_available_flag = proto.Field(proto.BOOL, number=32)
    """Параметр указывает на возможность торговать инструментом через API."""

    uid = proto.Field(proto.STRING, number=33)
    """Уникальный идентификатор инструмента."""

    real_exchange = proto.Field(RealExchange, number=34)
    """Реальная площадка исполнения расчётов."""

    position_uid = proto.Field(proto.STRING, number=35)
    """Уникальный идентификатор позиции инструмента."""

    for_iis_flag = proto.Field(proto.BOOL, number=46)
    """Признак доступности для ИИС."""

    for_qual_investor_flag = proto.Field(proto.BOOL, number=47)
    """Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов."""

    first_1min_candle_date = proto.Field(timestamp_pb2.Timestamp, number=56)
    """Дата первой минутной свечи."""

    first_1day_candle_date = proto.Field(timestamp_pb2.Timestamp, number=57)
    """Дата первой дневной свечи."""


class Brand(proto.Message):
    """Бренд."""

    uid = proto.Field(proto.STRING, number=1)
    """uid идентификатор бренда."""

    name = proto.Field(proto.STRING, number=2)
    """Наименование бренда."""

    description = proto.Field(proto.STRING, number=3)
    """Описание."""

    info = proto.Field(proto.STRING, number=4)
    """Информация о бренде."""

    company = proto.Field(proto.STRING, number=5)
    """Компания."""

    sector = proto.Field(proto.STRING, number=6)
    """Сектор."""

    country_of_risk = proto.Field(proto.STRING, number=7)
    """Код страны риска."""

    country_of_risk_name = proto.Field(proto.STRING, number=8)
    """Наименование страны риска."""


class FavoriteInstrument(proto.Message):
    """Массив избранных инструментов."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    ticker = proto.Field(proto.STRING, number=2)
    """Тикер инструмента."""

    class_code = proto.Field(proto.STRING, number=3)
    """Класс-код инструмента."""

    isin = proto.Field(proto.STRING, number=4)
    """Isin-идентификатор инструмента."""

    instrument_type = proto.Field(proto.STRING, number=11)
    """Тип инструмента."""

    otc_flag = proto.Field(proto.BOOL, number=16)
    """Признак внебиржевой ценной бумаги."""

    api_trade_available_flag = proto.Field(proto.BOOL, number=17)
    """Параметр указывает на возможность торговать инструментом через API."""


class TradingDay(proto.Message):
    """Информация о времени торгов."""

    date = proto.Field(timestamp_pb2.Timestamp, number=1)
    """Дата."""

    is_trading_day = proto.Field(proto.BOOL, number=2)
    """Признак торгового дня на бирже."""

    start_time = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Время начала торгов по часовому поясу UTC."""

    end_time = proto.Field(timestamp_pb2.Timestamp, number=4)
    """Время окончания торгов по часовому поясу UTC."""

    opening_auction_start_time = proto.Field(timestamp_pb2.Timestamp, number=7)
    """Время начала аукциона открытия в часовом поясе UTC."""

    closing_auction_end_time = proto.Field(timestamp_pb2.Timestamp, number=8)
    """Время окончания аукциона закрытия в часовом поясе UTC."""

    evening_opening_auction_start_time = proto.Field(timestamp_pb2.Timestamp, number=9)
    """Время начала аукциона открытия вечерней сессии в часовом поясе UTC."""

    evening_start_time = proto.Field(timestamp_pb2.Timestamp, number=10)
    """Время начала вечерней сессии в часовом поясе UTC."""

    evening_end_time = proto.Field(timestamp_pb2.Timestamp, number=11)
    """Время окончания вечерней сессии в часовом поясе UTC."""

    clearing_start_time = proto.Field(timestamp_pb2.Timestamp, number=12)
    """Время начала основного клиринга в часовом поясе UTC."""

    clearing_end_time = proto.Field(timestamp_pb2.Timestamp, number=13)
    """Время окончания основного клиринга в часовом поясе UTC."""

    premarket_start_time = proto.Field(timestamp_pb2.Timestamp, number=14)
    """Время начала премаркета в часовом поясе UTC."""

    premarket_end_time = proto.Field(timestamp_pb2.Timestamp, number=15)
    """Время окончания премаркета в часовом поясе UTC."""


class Coupon(proto.Message):
    """Объект передачи информации о купоне облигации."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    coupon_date = proto.Field(timestamp_pb2.Timestamp, number=2)
    """Дата выплаты купона."""

    coupon_number = proto.Field(proto.INT64, number=3)
    """Номер купона."""

    fix_date = proto.Field(timestamp_pb2.Timestamp, number=4)
    """(Опционально) Дата фиксации реестра для выплаты купона."""

    pay_one_bond = proto.Field(common.MoneyValue, number=5)
    """Выплата на одну облигацию."""

    coupon_type = proto.Field(CouponType, number=6)
    """Тип купона."""

    coupon_start_date = proto.Field(timestamp_pb2.Timestamp, number=7)
    """Начало купонного периода."""

    coupon_end_date = proto.Field(timestamp_pb2.Timestamp, number=8)
    """Окончание купонного периода."""

    coupon_period = proto.Field(proto.INT32, number=9)
    """Купонный период в днях."""


class AccruedInterest(proto.Message):
    """Операция начисления купонов."""

    date = proto.Field(timestamp_pb2.Timestamp, number=1)
    """Дата и время выплаты в часовом поясе UTC."""

    value = proto.Field(common.Quotation, number=2)
    """Величина выплаты."""

    value_percent = proto.Field(common.Quotation, number=3)
    """Величина выплаты в процентах от номинала."""

    nominal = proto.Field(common.Quotation, number=4)
    """Номинал облигации."""


class Instrument(proto.Message):
    """Объект передачи основной информации об инструменте."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    ticker = proto.Field(proto.STRING, number=2)
    """Тикер инструмента."""

    class_code = proto.Field(proto.STRING, number=3)
    """Класс-код инструмента."""

    isin = proto.Field(proto.STRING, number=4)
    """Isin-идентификатор инструмента."""

    lot = proto.Field(proto.INT32, number=5)
    """Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)"""

    currency = proto.Field(proto.STRING, number=6)
    """Валюта расчётов."""

    klong = proto.Field(common.Quotation, number=7)
    """Коэффициент ставки риска длинной позиции по инструменту."""

    kshort = proto.Field(common.Quotation, number=8)
    """Коэффициент ставки риска короткой позиции по инструменту."""

    dlong = proto.Field(common.Quotation, number=9)
    """Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort = proto.Field(common.Quotation, number=10)
    """Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    dlong_min = proto.Field(common.Quotation, number=11)
    """Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/)"""

    dshort_min = proto.Field(common.Quotation, number=12)
    """Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/)"""

    short_enabled_flag = proto.Field(proto.BOOL, number=13)
    """Признак доступности для операций в шорт."""

    name = proto.Field(proto.STRING, number=14)
    """Название инструмента."""

    exchange = proto.Field(proto.STRING, number=15)
    """Торговая площадка."""

    country_of_risk = proto.Field(proto.STRING, number=16)
    """Код страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    country_of_risk_name = proto.Field(proto.STRING, number=17)
    """Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес."""

    instrument_type = proto.Field(proto.STRING, number=18)
    """Тип инструмента."""

    trading_status = proto.Field(common.SecurityTradingStatus, number=19)
    """Текущий режим торгов инструмента."""

    otc_flag = proto.Field(proto.BOOL, number=20)
    """Признак внебиржевой ценной бумаги."""

    buy_available_flag = proto.Field(proto.BOOL, number=21)
    """Признак доступности для покупки."""

    sell_available_flag = proto.Field(proto.BOOL, number=22)
    """Признак доступности для продажи."""

    min_price_increment = proto.Field(common.Quotation, number=23)
    """Шаг цены."""

    api_trade_available_flag = proto.Field(proto.BOOL, number=24)
    """Параметр указывает на возможность торговать инструментом через API."""

    uid = proto.Field(proto.STRING, number=25)
    """Уникальный идентификатор инструмента."""

    real_exchange = proto.Field(RealExchange, number=26)
    """Реальная площадка исполнения расчётов."""

    position_uid = proto.Field(proto.STRING, number=27)
    """Уникальный идентификатор позиции инструмента."""

    for_iis_flag = proto.Field(proto.BOOL, number=36)
    """Признак доступности для ИИС."""

    for_qual_investor_flag = proto.Field(proto.BOOL, number=37)
    """Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов."""

    first_1min_candle_date = proto.Field(timestamp_pb2.Timestamp, number=56)
    """Дата первой минутной свечи."""

    first_1day_candle_date = proto.Field(timestamp_pb2.Timestamp, number=57)
    """Дата первой дневной свечи."""


class Dividend(proto.Message):
    """Информация о выплате."""

    dividend_net = proto.Field(common.MoneyValue, number=1)
    """Величина дивиденда на 1 ценную бумагу (включая валюту)."""

    payment_date = proto.Field(timestamp_pb2.Timestamp, number=2)
    """Дата фактических выплат в часовом поясе UTC."""

    declared_date = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Дата объявления дивидендов в часовом поясе UTC."""

    last_buy_date = proto.Field(timestamp_pb2.Timestamp, number=4)
    """Последний день (включительно) покупки для получения выплаты в часовом поясе UTC."""

    dividend_type = proto.Field(proto.STRING, number=5)
    """Тип выплаты. Возможные значения: Regular Cash – регулярные выплаты, Cancelled – выплата отменена, Daily Accrual – ежедневное начисление, Return of Capital – возврат капитала, прочие типы выплат."""

    record_date = proto.Field(timestamp_pb2.Timestamp, number=6)
    """Дата фиксации реестра в часовом поясе UTC."""

    regularity = proto.Field(proto.STRING, number=7)
    """Регулярность выплаты. Возможные значения: Annual – ежегодная, Semi-Anl – каждые полгода, прочие типы выплат."""

    close_price = proto.Field(common.MoneyValue, number=8)
    """Цена закрытия инструмента на момент ex_dividend_date."""

    yield_value = proto.Field(common.Quotation, number=9)
    """Величина доходности."""

    created_at = proto.Field(timestamp_pb2.Timestamp, number=10)
    """Дата и время создания записи в часовом поясе UTC."""


class AssetCurrency(proto.Message):
    """Валюта."""

    base_currency = proto.Field(proto.STRING, number=1)
    """ISO-код валюты."""


class AssetShare(proto.Message):
    """Акция."""

    type = proto.Field(ShareType, number=1)
    """Тип акции."""

    issue_size = proto.Field(common.Quotation, number=2)
    """Объем выпуска (шт.)."""

    nominal = proto.Field(common.Quotation, number=3)
    """Номинал."""

    nominal_currency = proto.Field(proto.STRING, number=4)
    """Валюта номинала."""

    primary_index = proto.Field(proto.STRING, number=5)
    """Индекс (Bloomberg)."""

    dividend_rate = proto.Field(common.Quotation, number=6)
    """Ставка дивиденда (для привилегированных акций)."""

    preferred_share_type = proto.Field(proto.STRING, number=7)
    """Тип привилегированных акций."""

    ipo_date = proto.Field(timestamp_pb2.Timestamp, number=8)
    """Дата IPO."""

    registry_date = proto.Field(timestamp_pb2.Timestamp, number=9)
    """Дата регистрации."""

    div_yield_flag = proto.Field(proto.BOOL, number=10)
    """Признак наличия дивидендной доходности."""

    issue_kind = proto.Field(proto.STRING, number=11)
    """Форма выпуска ФИ."""

    placement_date = proto.Field(timestamp_pb2.Timestamp, number=12)
    """Дата размещения акции."""

    repres_isin = proto.Field(proto.STRING, number=13)
    """ISIN базового актива."""

    issue_size_plan = proto.Field(common.Quotation, number=14)
    """Объявленное количество шт."""

    total_float = proto.Field(common.Quotation, number=15)
    """Количество акций в свободном обращении."""


class AssetBond(proto.Message):
    """Облигация."""

    current_nominal = proto.Field(common.Quotation, number=1)
    """Текущий номинал."""

    borrow_name = proto.Field(proto.STRING, number=2)
    """Наименование заемщика."""

    issue_size = proto.Field(common.Quotation, number=3)
    """Объем эмиссии облигации (стоимость)."""

    nominal = proto.Field(common.Quotation, number=4)
    """Номинал облигации."""

    nominal_currency = proto.Field(proto.STRING, number=5)
    """Валюта номинала."""

    issue_kind = proto.Field(proto.STRING, number=6)
    """Форма выпуска облигации."""

    interest_kind = proto.Field(proto.STRING, number=7)
    """Форма дохода облигации."""

    coupon_quantity_per_year = proto.Field(proto.INT32, number=8)
    """Количество выплат в год."""

    indexed_nominal_flag = proto.Field(proto.BOOL, number=9)
    """Признак облигации с индексируемым номиналом."""

    subordinated_flag = proto.Field(proto.BOOL, number=10)
    """Признак субординированной облигации."""

    collateral_flag = proto.Field(proto.BOOL, number=11)
    """Признак обеспеченной облигации."""

    tax_free_flag = proto.Field(proto.BOOL, number=12)
    """Признак показывает, что купоны облигации не облагаются налогом (для mass market)."""

    amortization_flag = proto.Field(proto.BOOL, number=13)
    """Признак облигации с амортизацией долга."""

    floating_coupon_flag = proto.Field(proto.BOOL, number=14)
    """Признак облигации с плавающим купоном."""

    perpetual_flag = proto.Field(proto.BOOL, number=15)
    """Признак бессрочной облигации."""

    maturity_date = proto.Field(timestamp_pb2.Timestamp, number=16)
    """Дата погашения облигации."""

    return_condition = proto.Field(proto.STRING, number=17)
    """Описание и условия получения дополнительного дохода."""

    state_reg_date = proto.Field(timestamp_pb2.Timestamp, number=18)
    """Дата выпуска облигации."""

    placement_date = proto.Field(timestamp_pb2.Timestamp, number=19)
    """Дата размещения облигации."""

    placement_price = proto.Field(common.Quotation, number=20)
    """Цена размещения облигации."""

    issue_size_plan = proto.Field(common.Quotation, number=21)
    """Объявленное количество шт."""


class AssetStructuredProduct(proto.Message):
    """Структурная нота."""

    borrow_name = proto.Field(proto.STRING, number=1)
    """Наименование заемщика."""

    nominal = proto.Field(common.Quotation, number=2)
    """Номинал."""

    nominal_currency = proto.Field(proto.STRING, number=3)
    """Валюта номинала."""

    type = proto.Field(StructuredProductType, number=4)
    """Тип структурной ноты."""

    logic_portfolio = proto.Field(proto.STRING, number=5)
    """Стратегия портфеля."""

    asset_type = proto.Field(AssetType, number=6)
    """Тип базового актива."""

    basic_asset = proto.Field(proto.STRING, number=7)
    """Вид базового актива в зависимости от типа базового актива."""

    safety_barrier = proto.Field(common.Quotation, number=8)
    """Барьер сохранности (в процентах)."""

    maturity_date = proto.Field(timestamp_pb2.Timestamp, number=9)
    """Дата погашения."""

    issue_size_plan = proto.Field(common.Quotation, number=10)
    """Объявленное количество шт."""

    issue_size = proto.Field(common.Quotation, number=11)
    """Объем размещения."""

    placement_date = proto.Field(timestamp_pb2.Timestamp, number=12)
    """Дата размещения ноты."""

    issue_kind = proto.Field(proto.STRING, number=13)
    """Форма выпуска."""


class AssetEtf(proto.Message):
    """Фонд."""

    total_expense = proto.Field(common.Quotation, number=1)
    """Суммарные расходы фонда (в %)."""

    hurdle_rate = proto.Field(common.Quotation, number=2)
    """Барьерная ставка доходности после которой фонд имеет право на perfomance fee (в процентах)."""

    performance_fee = proto.Field(common.Quotation, number=3)
    """Комиссия за успешные результаты фонда (в процентах)."""

    fixed_commission = proto.Field(common.Quotation, number=4)
    """Фиксированная комиссия за управление (в процентах)."""

    payment_type = proto.Field(proto.STRING, number=5)
    """Тип распределения доходов от выплат по бумагам."""

    watermark_flag = proto.Field(proto.BOOL, number=6)
    """Признак необходимости выхода фонда в плюс для получения комиссии."""

    buy_premium = proto.Field(common.Quotation, number=7)
    """Премия (надбавка к цене) при покупке доли в фонде (в процентах)."""

    sell_discount = proto.Field(common.Quotation, number=8)
    """Ставка дисконта (вычет из цены) при продаже доли в фонде (в процентах)."""

    rebalancing_flag = proto.Field(proto.BOOL, number=9)
    """Признак ребалансируемости портфеля фонда."""

    rebalancing_freq = proto.Field(proto.STRING, number=10)
    """Периодичность ребалансировки."""

    management_type = proto.Field(proto.STRING, number=11)
    """Тип управления."""

    primary_index = proto.Field(proto.STRING, number=12)
    """Индекс, который реплицирует (старается копировать) фонд."""

    focus_type = proto.Field(proto.STRING, number=13)
    """База ETF."""

    leveraged_flag = proto.Field(proto.BOOL, number=14)
    """Признак использования заемных активов (плечо)."""

    num_share = proto.Field(common.Quotation, number=15)
    """Количество акций в обращении."""

    ucits_flag = proto.Field(proto.BOOL, number=16)
    """Признак обязательства по отчетности перед регулятором."""

    released_date = proto.Field(timestamp_pb2.Timestamp, number=17)
    """Дата выпуска."""

    description = proto.Field(proto.STRING, number=18)
    """Описание фонда."""

    primary_index_description = proto.Field(proto.STRING, number=19)
    """Описание индекса, за которым следует фонд."""

    primary_index_company = proto.Field(proto.STRING, number=20)
    """Основные компании, в которые вкладывается фонд."""

    index_recovery_period = proto.Field(common.Quotation, number=21)
    """Срок восстановления индекса (после просадки)."""

    inav_code = proto.Field(proto.STRING, number=22)
    """IVAV-код."""

    div_yield_flag = proto.Field(proto.BOOL, number=23)
    """Признак наличия дивидендной доходности."""

    expense_commission = proto.Field(common.Quotation, number=24)
    """Комиссия на покрытие расходов фонда (в процентах)."""

    primary_index_tracking_error = proto.Field(common.Quotation, number=25)
    """Ошибка следования за индексом (в процентах)."""

    rebalancing_plan = proto.Field(proto.STRING, number=26)
    """Плановая ребалансировка портфеля."""

    tax_rate = proto.Field(proto.STRING, number=27)
    """Ставки налогообложения дивидендов и купонов."""

    rebalancing_dates = proto.RepeatedField(timestamp_pb2.Timestamp, number=28)
    """Даты ребалансировок."""

    issue_kind = proto.Field(proto.STRING, number=29)
    """Форма выпуска."""

    nominal = proto.Field(common.Quotation, number=30)
    """Номинал."""

    nominal_currency = proto.Field(proto.STRING, number=31)
    """Валюта номинала."""


class AssetClearingCertificate(proto.Message):
    """Клиринговый сертификат участия."""

    nominal = proto.Field(common.Quotation, number=1)
    """Номинал."""

    nominal_currency = proto.Field(proto.STRING, number=2)
    """Валюта номинала."""


class AssetInstrument(proto.Message):
    """Идентификаторы инструмента."""

    uid = proto.Field(proto.STRING, number=1)
    """uid идентификатор инструмента."""

    figi = proto.Field(proto.STRING, number=2)
    """figi идентификатор инструмента."""

    instrument_type = proto.Field(proto.STRING, number=3)
    """Тип инструмента."""

    ticker = proto.Field(proto.STRING, number=4)
    """Тикер инструмента."""

    class_code = proto.Field(proto.STRING, number=5)
    """Класс-код (секция торгов)."""

    links = proto.RepeatedField(InstrumentLink, number=6)
    """Массив связанных инструментов."""


class InstrumentLink(proto.Message):
    """Связь с другим инструментом."""

    type = proto.Field(proto.STRING, number=1)
    """Тип связи."""

    instrument_uid = proto.Field(proto.STRING, number=2)
    """uid идентификатор связанного инструмента."""


class EditFavoritesRequestInstrument(proto.Message):
    """Массив инструментов для редактирования списка избранных инструментов."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""


class CountryResponse(proto.Message):
    """Данные о стране."""

    alfa_two = proto.Field(proto.STRING, number=1)
    """Двухбуквенный код страны."""

    alfa_three = proto.Field(proto.STRING, number=2)
    """Трёхбуквенный код страны."""

    name = proto.Field(proto.STRING, number=3)
    """Наименование страны."""

    name_brief = proto.Field(proto.STRING, number=4)
    """Краткое наименование страны."""


class InstrumentShort(proto.Message):
    """Краткая информация об инструменте."""

    isin = proto.Field(proto.STRING, number=1)
    """Isin инструмента."""

    figi = proto.Field(proto.STRING, number=2)
    """Figi инструмента."""

    ticker = proto.Field(proto.STRING, number=3)
    """Ticker инструмента."""

    class_code = proto.Field(proto.STRING, number=4)
    """ClassCode инструмента."""

    instrument_type = proto.Field(proto.STRING, number=5)
    """Тип инструмента."""

    name = proto.Field(proto.STRING, number=6)
    """Название инструмента."""

    uid = proto.Field(proto.STRING, number=7)
    """Уникальный идентификатор инструмента."""

    position_uid = proto.Field(proto.STRING, number=8)
    """Уникальный идентификатор позиции инструмента."""

    api_trade_available_flag = proto.Field(proto.BOOL, number=11)
    """Параметр указывает на возможность торговать инструментом через API."""

    for_iis_flag = proto.Field(proto.BOOL, number=12)
    """Признак доступности для ИИС."""

    first_1min_candle_date = proto.Field(timestamp_pb2.Timestamp, number=26)
    """Дата первой минутной свечи."""

    first_1day_candle_date = proto.Field(timestamp_pb2.Timestamp, number=27)
    """Дата первой дневной свечи."""

    for_qual_investor_flag = proto.Field(proto.BOOL, number=28)
    """Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов."""


class TradingSchedulesRequest(proto.Message):
    """Запрос расписания торгов."""

    exchange = proto.Field(proto.STRING, number=1)
    """Наименование биржи или расчетного календаря. </br>Если не передаётся, возвращается информация по всем доступным торговым площадкам."""

    from_ = proto.Field(timestamp_pb2.Timestamp, number=2)
    """Начало периода по часовому поясу UTC."""

    to = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Окончание периода по часовому поясу UTC."""


class TradingSchedule(proto.Message):
    """Данные по торговой площадке."""

    exchange = proto.Field(proto.STRING, number=1)
    """Наименование торговой площадки."""

    days = proto.RepeatedField(TradingDay, number=2)
    """Массив с торговыми и неторговыми днями."""


class InstrumentRequest(proto.Message):
    """Запрос получения инструмента по идентификатору."""

    id_type = proto.Field(InstrumentIdType, number=1)
    """Тип идентификатора инструмента. Возможные значения: figi, ticker. Подробнее об идентификации инструментов: [Идентификация инструментов](https://tinkoff.github.io/investAPI/faq_identification/)"""

    class_code = proto.Field(proto.STRING, number=2)
    """Идентификатор class_code. Обязателен при id_type = ticker."""

    id = proto.Field(proto.STRING, number=3)
    """Идентификатор запрашиваемого инструмента."""


class InstrumentsRequest(proto.Message):
    """Запрос получения инструментов."""

    instrument_status = proto.Field(InstrumentStatus, number=1)
    """Статус запрашиваемых инструментов. Возможные значения: [InstrumentStatus](#instrumentstatus)"""


class GetBondCouponsRequest(proto.Message):
    """Запрос купонов по облигации."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    from_ = proto.Field(timestamp_pb2.Timestamp, number=2)
    """Начало запрашиваемого периода в часовом поясе UTC. Фильтрация по coupon_date (дата выплаты купона)"""

    to = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Окончание запрашиваемого периода в часовом поясе UTC. Фильтрация по coupon_date (дата выплаты купона)"""


class GetAccruedInterestsRequest(proto.Message):
    """Запрос НКД по облигации"""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    from_ = proto.Field(timestamp_pb2.Timestamp, number=2)
    """Начало запрашиваемого периода в часовом поясе UTC."""

    to = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Окончание запрашиваемого периода в часовом поясе UTC."""


class GetFuturesMarginRequest(proto.Message):
    """Запрос информации о фьючерсе"""

    figi = proto.Field(proto.STRING, number=1)
    """Идентификатор инструмента."""


class GetFuturesMarginResponse(proto.Message):
    """Данные по фьючерсу"""

    initial_margin_on_buy = proto.Field(common.MoneyValue, number=1)
    """Гарантийное обеспечение при покупке."""

    initial_margin_on_sell = proto.Field(common.MoneyValue, number=2)
    """Гарантийное обеспечение при продаже."""

    min_price_increment = proto.Field(common.Quotation, number=3)
    """Шаг цены."""

    min_price_increment_amount = proto.Field(common.Quotation, number=4)
    """Стоимость шага цены."""


class GetDividendsRequest(proto.Message):
    """Запрос дивидендов."""

    figi = proto.Field(proto.STRING, number=1)
    """Figi-идентификатор инструмента."""

    from_ = proto.Field(timestamp_pb2.Timestamp, number=2)
    """Начало запрашиваемого периода в часовом поясе UTC. Фильтрация происходит по параметру *record_date* (дата фиксации реестра)."""

    to = proto.Field(timestamp_pb2.Timestamp, number=3)
    """Окончание запрашиваемого периода в часовом поясе UTC. Фильтрация происходит по параметру *record_date* (дата фиксации реестра)."""


class AssetRequest(proto.Message):
    """Запрос актива по идентификатору."""

    id = proto.Field(proto.STRING, number=1)
    """uid-идентификатор актива."""


class AssetsRequest(proto.Message):
    """Запрос списка активов."""


class Asset(proto.Message):
    """Информация об активе."""

    uid = proto.Field(proto.STRING, number=1)
    """Уникальный идентификатор актива."""

    type = proto.Field(AssetType, number=2)
    """Тип актива."""

    name = proto.Field(proto.STRING, number=3)
    """Наименование актива."""

    instruments = proto.RepeatedField(AssetInstrument, number=4)
    """Массив идентификаторов инструментов."""


class GetFavoritesRequest(proto.Message):
    """Запрос списка избранных инструментов, входные параметры не требуются."""


class GetCountriesRequest(proto.Message):
    """Запрос справочника стран."""


class FindInstrumentRequest(proto.Message):
    """Запрос на поиск инструментов."""

    query = proto.Field(proto.STRING, number=1)
    """Строка поиска."""


class GetBrandsRequest(proto.Message):
    """Запрос списка брендов."""


class GetBrandRequest(proto.Message):
    """Запрос бренда."""

    id = proto.Field(proto.STRING, number=1)
    """Uid-идентификатор бренда."""


class TradingSchedulesResponse(proto.Message):
    """Список торговых площадок."""

    exchanges = proto.RepeatedField(TradingSchedule, number=1)
    """Список торговых площадок и режимов торгов."""


class BondResponse(proto.Message):
    """Информация об облигации."""

    instrument = proto.Field(Bond, number=1)
    """Информация об облигации."""


class BondsResponse(proto.Message):
    """Список облигаций."""

    instruments = proto.RepeatedField(Bond, number=1)
    """Массив облигаций."""


class GetBondCouponsResponse(proto.Message):
    """Купоны по облигации."""

    events = proto.RepeatedField(Coupon, number=1)

class CurrencyResponse(proto.Message):
    """Данные по валюте."""

    instrument = proto.Field(Currency, number=1)
    """Информация о валюте."""


class CurrenciesResponse(proto.Message):
    """Данные по валютам."""

    instruments = proto.RepeatedField(Currency, number=1)
    """Массив валют."""


class EtfResponse(proto.Message):
    """Данные по фонду."""

    instrument = proto.Field(Etf, number=1)
    """Информация о фонде."""


class EtfsResponse(proto.Message):
    """Данные по фондам."""

    instruments = proto.RepeatedField(Etf, number=1)
    """Массив фондов."""


class FutureResponse(proto.Message):
    """Данные по фьючерсу."""

    instrument = proto.Field(Future, number=1)
    """Информация о фьючерсу."""


class FuturesResponse(proto.Message):
    """Данные по фьючерсам."""

    instruments = proto.RepeatedField(Future, number=1)
    """Массив фьючерсов."""


class OptionResponse(proto.Message):
    """Данные по опциону."""

    instrument = proto.Field(Option, number=1)
    """Информация по опциону."""


class OptionsResponse(proto.Message):
    """Данные по опционам."""

    instruments = proto.RepeatedField(Option, number=1)
    """Массив данных по опциону."""


class ShareResponse(proto.Message):
    """Данные по акции."""

    instrument = proto.Field(Share, number=1)
    """Информация об акции."""


class SharesResponse(proto.Message):
    """Данные по акциям."""

    instruments = proto.RepeatedField(Share, number=1)
    """Массив акций."""


class GetAccruedInterestsResponse(proto.Message):
    """НКД облигации"""

    accrued_interests = proto.RepeatedField(AccruedInterest, number=1)
    """Массив операций начисления купонов."""


class InstrumentResponse(proto.Message):
    """Данные по инструменту."""

    instrument = proto.Field(Instrument, number=1)
    """Основная информация об инструменте."""


class GetDividendsResponse(proto.Message):
    """Дивиденды."""

    dividends = proto.RepeatedField(Dividend, number=1)

class AssetResponse(proto.Message):
    """Данные по активу."""

    asset = proto.Field(AssetFull, number=1)
    """Актив."""


class AssetsResponse(proto.Message):
    """Список активов."""

    assets = proto.RepeatedField(Asset, number=1)
    """Активы."""


class GetFavoritesResponse(proto.Message):
    """В ответ передаётся список избранных инструментов в качестве массива."""

    favorite_instruments = proto.RepeatedField(FavoriteInstrument, number=1)
    """Массив инструментов"""


class EditFavoritesRequest(proto.Message):
    """Запрос редактирования списка избранных инструментов."""

    instruments = proto.RepeatedField(EditFavoritesRequestInstrument, number=1)
    """Массив инструментов."""

    action_type = proto.Field(EditFavoritesActionType, number=6)
    """Тип действия со списком."""


class EditFavoritesResponse(proto.Message):
    """Результат редактирования списка избранных инструментов."""

    favorite_instruments = proto.RepeatedField(FavoriteInstrument, number=1)
    """Массив инструментов"""


class GetCountriesResponse(proto.Message):
    """Справочник стран."""

    countries = proto.RepeatedField(CountryResponse, number=1)
    """Массив стран."""


class FindInstrumentResponse(proto.Message):
    """Результат поиска инструментов."""

    instruments = proto.RepeatedField(InstrumentShort, number=1)
    """Массив инструментов, удовлетворяющих условиям поиска."""


class GetBrandsResponse(proto.Message):
    """Список брендов."""

    brands = proto.RepeatedField(Brand, number=1)
    """Массив брендов."""


class AssetFull(proto.Message):

    uid = proto.Field(proto.STRING, number=1, oneof="ext", optional=True)
    """Уникальный идентификатор актива."""

    type = proto.Field(AssetType, number=2, oneof="ext", optional=True)
    """Тип актива."""

    name = proto.Field(proto.STRING, number=3, oneof="ext", optional=True)
    """Наименование актива."""

    name_brief = proto.Field(proto.STRING, number=4, oneof="ext", optional=True)
    """Короткое наименование актива."""

    description = proto.Field(proto.STRING, number=5, oneof="ext", optional=True)
    """Описание актива."""

    deleted_at = proto.Field(timestamp_pb2.Timestamp, number=6, oneof="ext", optional=True)
    """Дата и время удаления актива."""

    required_tests = proto.RepeatedField(proto.STRING, number=7, oneof="ext", optional=True)
    """Тестирование клиентов."""

    currency = proto.Field(AssetCurrency, number=8, oneof="ext", optional=True)
    """Валюта. Обязательно и заполняется только для type = "ASSET_TYPE_CURRENCY"."""

    security = proto.Field(AssetSecurity, number=9, oneof="ext", optional=True)
    """Ценная бумага. Обязательно и заполняется только для type = "ASSET_TYPE_SECURITY"."""

    gos_reg_code = proto.Field(proto.STRING, number=10, oneof="ext", optional=True)
    """Номер государственной регистрации."""

    cfi = proto.Field(proto.STRING, number=11, oneof="ext", optional=True)
    """Код CFI."""

    code_nsd = proto.Field(proto.STRING, number=12, oneof="ext", optional=True)
    """Код НРД инструмента."""

    status = proto.Field(proto.STRING, number=13, oneof="ext", optional=True)
    """Статус актива."""

    brand = proto.Field(Brand, number=14, oneof="ext", optional=True)
    """Бренд."""

    updated_at = proto.Field(timestamp_pb2.Timestamp, number=15, oneof="ext", optional=True)
    """Дата и время последнего обновления записи."""

    br_code = proto.Field(proto.STRING, number=16, oneof="ext", optional=True)
    """Код типа ц.б. по классификации Банка России."""

    br_code_name = proto.Field(proto.STRING, number=17, oneof="ext", optional=True)
    """Наименование кода типа ц.б. по классификации Банка России."""

    instruments = proto.RepeatedField(AssetInstrument, number=18, oneof="ext", optional=True)
    """Массив идентификаторов инструментов."""


class AssetSecurity(proto.Message):
    """Ценная бумага."""

    isin = proto.Field(proto.STRING, number=1, oneof="ext", optional=True)
    """ISIN-идентификатор ценной бумаги."""

    type = proto.Field(proto.STRING, number=2, oneof="ext", optional=True)
    """Тип ценной бумаги."""

    share = proto.Field(AssetShare, number=3, oneof="ext", optional=True)
    """Акция. Заполняется только для акций (тип актива asset.type = "ASSET_TYPE_SECURITY" и security.type = share)."""

    bond = proto.Field(AssetBond, number=4, oneof="ext", optional=True)
    """Облигация. Заполняется только для облигаций (тип актива asset.type = "ASSET_TYPE_SECURITY" и security.type = bond)."""

    sp = proto.Field(AssetStructuredProduct, number=5, oneof="ext", optional=True)
    """Структурная нота. Заполняется только для структурных продуктов (тип актива asset.type = "ASSET_TYPE_SECURITY" и security.type = sp)."""

    etf = proto.Field(AssetEtf, number=6, oneof="ext", optional=True)
    """Фонд. Заполняется только для фондов (тип актива asset.type = "ASSET_TYPE_SECURITY" и security.type = etf)."""

    clearing_certificate = proto.Field(AssetClearingCertificate, number=7, oneof="ext", optional=True)
    """Клиринговый сертификат участия. Заполняется только для клиринговых сертификатов (тип актива asset.type = "ASSET_TYPE_SECURITY" и security.type = clearing_certificate)."""

